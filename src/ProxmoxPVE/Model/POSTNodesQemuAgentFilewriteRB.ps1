#
# Proxmox VE
# Generated module to access all Proxmox VE Api Endpoints
# Version: 0.5
# Contact: amna.wolf@gmail.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Encode
No description available.
.PARAMETER File
No description available.
.PARAMETER Content
No description available.
.OUTPUTS

POSTNodesQemuAgentFilewriteRB<PSCustomObject>
#>

function Initialize-PVEPOSTNodesQemuAgentFilewriteRB {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Encode},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${File},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Content}
    )

    Process {
        'Creating PSCustomObject: ProxmoxPVE => PVEPOSTNodesQemuAgentFilewriteRB' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if (!$Content -and $Content.length -gt 61440) {
            throw "invalid value for 'Content', the character length must be smaller than or equal to 61440."
        }


		 $DisplayNameMapping =@{
			"Encode"="encode"; "File"="file"; "Content"="content"
        }
		
		 $OBJ = @{}
		foreach($parameter in   $PSBoundParameters.Keys){
			#If Specifield map the Display name back
			$OBJ.($DisplayNameMapping.($parameter)) = $PSBoundParameters.$parameter
		}

		$PSO = [PSCustomObject]$OBJ


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to POSTNodesQemuAgentFilewriteRB<PSCustomObject>

.DESCRIPTION

Convert from JSON to POSTNodesQemuAgentFilewriteRB<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

POSTNodesQemuAgentFilewriteRB<PSCustomObject>
#>
function ConvertFrom-PVEJsonToPOSTNodesQemuAgentFilewriteRB {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ProxmoxPVE => PVEPOSTNodesQemuAgentFilewriteRB' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PVEPOSTNodesQemuAgentFilewriteRB
        $AllProperties = ("encode", "file", "content")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "encode"))) { #optional property not found
            $Encode = $null
        } else {
            $Encode = $JsonParameters.PSobject.Properties["encode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "file"))) { #optional property not found
            $File = $null
        } else {
            $File = $JsonParameters.PSobject.Properties["file"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "content"))) { #optional property not found
            $Content = $null
        } else {
            $Content = $JsonParameters.PSobject.Properties["content"].value
        }

        $PSO = [PSCustomObject]@{
            "encode" = ${Encode}
            "file" = ${File}
            "content" = ${Content}
        }

        return $PSO
    }

}


#
# Proxmox VE
# Generated module to access all Proxmox VE Api Endpoints
# Version: 0.2
# Contact: 
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER ApplicationMetadata
No description available.
.PARAMETER CrushRuleName
No description available.
.PARAMETER AutoscaleStatus
No description available.
.PARAMETER BytesUsed
No description available.
.PARAMETER TargetSizeRatio
No description available.
.PARAMETER MinSize
No description available.
.PARAMETER PercentUsed
No description available.
.PARAMETER PgNum
No description available.
.PARAMETER PoolName
No description available.
.PARAMETER PgNumMin
No description available.
.PARAMETER CrushRule
No description available.
.PARAMETER PgNumFinal
No description available.
.PARAMETER Size
No description available.
.PARAMETER Type
No description available.
.PARAMETER TargetSize
No description available.
.PARAMETER PgAutoscaleMode
No description available.
.PARAMETER Pool
No description available.
.OUTPUTS

NodesCephPoolInner<PSCustomObject>
#>

function Initialize-PVENodesCephPoolInner {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${ApplicationMetadata},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CrushRuleName},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${AutoscaleStatus},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${BytesUsed},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${TargetSizeRatio},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MinSize},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${PercentUsed},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PgNum},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PoolName},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PgNumMin},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CrushRule},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PgNumFinal},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Size},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("replicated", "erasure", "unknown")]
        [String]
        ${Type},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${TargetSize},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PgAutoscaleMode},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Pool}
    )

    Process {
        'Creating PSCustomObject: ProxmoxPVE => PVENodesCephPoolInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


		 $DisplayNameMapping =@{
			"ApplicationMetadata"="application_metadata"; "CrushRuleName"="crush_rule_name"; "AutoscaleStatus"="autoscale_status"; "BytesUsed"="bytes_used"; "TargetSizeRatio"="target_size_ratio"; "MinSize"="min_size"; "PercentUsed"="percent_used"; "PgNum"="pg_num"; "PoolName"="pool_name"; "PgNumMin"="pg_num_min"; "CrushRule"="crush_rule"; "PgNumFinal"="pg_num_final"; "Size"="size"; "Type"="type"; "TargetSize"="target_size"; "PgAutoscaleMode"="pg_autoscale_mode"; "Pool"="pool"
        }
		
		 $OBJ = @{}
		foreach($parameter in   $PSBoundParameters.Keys){
			#If Specifield map the Display name back
			$OBJ.($DisplayNameMapping.($parameter)) = "$PSBoundParameters.$parameter"
		}

		$PSO = [PSCustomObject]$OBJ


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NodesCephPoolInner<PSCustomObject>

.DESCRIPTION

Convert from JSON to NodesCephPoolInner<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NodesCephPoolInner<PSCustomObject>
#>
function ConvertFrom-PVEJsonToNodesCephPoolInner {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ProxmoxPVE => PVENodesCephPoolInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PVENodesCephPoolInner
        $AllProperties = ("application_metadata", "crush_rule_name", "autoscale_status", "bytes_used", "target_size_ratio", "min_size", "percent_used", "pg_num", "pool_name", "pg_num_min", "crush_rule", "pg_num_final", "size", "type", "target_size", "pg_autoscale_mode", "pool")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "application_metadata"))) { #optional property not found
            $ApplicationMetadata = $null
        } else {
            $ApplicationMetadata = $JsonParameters.PSobject.Properties["application_metadata"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "crush_rule_name"))) { #optional property not found
            $CrushRuleName = $null
        } else {
            $CrushRuleName = $JsonParameters.PSobject.Properties["crush_rule_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "autoscale_status"))) { #optional property not found
            $AutoscaleStatus = $null
        } else {
            $AutoscaleStatus = $JsonParameters.PSobject.Properties["autoscale_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "bytes_used"))) { #optional property not found
            $BytesUsed = $null
        } else {
            $BytesUsed = $JsonParameters.PSobject.Properties["bytes_used"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "target_size_ratio"))) { #optional property not found
            $TargetSizeRatio = $null
        } else {
            $TargetSizeRatio = $JsonParameters.PSobject.Properties["target_size_ratio"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "min_size"))) { #optional property not found
            $MinSize = $null
        } else {
            $MinSize = $JsonParameters.PSobject.Properties["min_size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "percent_used"))) { #optional property not found
            $PercentUsed = $null
        } else {
            $PercentUsed = $JsonParameters.PSobject.Properties["percent_used"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pg_num"))) { #optional property not found
            $PgNum = $null
        } else {
            $PgNum = $JsonParameters.PSobject.Properties["pg_num"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pool_name"))) { #optional property not found
            $PoolName = $null
        } else {
            $PoolName = $JsonParameters.PSobject.Properties["pool_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pg_num_min"))) { #optional property not found
            $PgNumMin = $null
        } else {
            $PgNumMin = $JsonParameters.PSobject.Properties["pg_num_min"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "crush_rule"))) { #optional property not found
            $CrushRule = $null
        } else {
            $CrushRule = $JsonParameters.PSobject.Properties["crush_rule"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pg_num_final"))) { #optional property not found
            $PgNumFinal = $null
        } else {
            $PgNumFinal = $JsonParameters.PSobject.Properties["pg_num_final"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "size"))) { #optional property not found
            $Size = $null
        } else {
            $Size = $JsonParameters.PSobject.Properties["size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "type"))) { #optional property not found
            $Type = $null
        } else {
            $Type = $JsonParameters.PSobject.Properties["type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "target_size"))) { #optional property not found
            $TargetSize = $null
        } else {
            $TargetSize = $JsonParameters.PSobject.Properties["target_size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pg_autoscale_mode"))) { #optional property not found
            $PgAutoscaleMode = $null
        } else {
            $PgAutoscaleMode = $JsonParameters.PSobject.Properties["pg_autoscale_mode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pool"))) { #optional property not found
            $Pool = $null
        } else {
            $Pool = $JsonParameters.PSobject.Properties["pool"].value
        }

        $PSO = [PSCustomObject]@{
            "application_metadata" = ${ApplicationMetadata}
            "crush_rule_name" = ${CrushRuleName}
            "autoscale_status" = ${AutoscaleStatus}
            "bytes_used" = ${BytesUsed}
            "target_size_ratio" = ${TargetSizeRatio}
            "min_size" = ${MinSize}
            "percent_used" = ${PercentUsed}
            "pg_num" = ${PgNum}
            "pool_name" = ${PoolName}
            "pg_num_min" = ${PgNumMin}
            "crush_rule" = ${CrushRule}
            "pg_num_final" = ${PgNumFinal}
            "size" = ${Size}
            "type" = ${Type}
            "target_size" = ${TargetSize}
            "pg_autoscale_mode" = ${PgAutoscaleMode}
            "pool" = ${Pool}
        }

        return $PSO
    }

}


#
# Proxmox VE Module 1.0
# Generated OpenApiDescription to render Modules via OpenapiGenerator
# Version: 0.1
# Contact: 
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Description
No description available.
.PARAMETER Map
No description available.
.PARAMETER Id
No description available.
.OUTPUTS

POSTClusterMappingUsbRB<PSCustomObject>
#>

function Initialize-PVEPOSTClusterMappingUsbRB {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Map},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id}
    )

    Process {
        'Creating PSCustomObject: ProxmoxPVE => PVEPOSTClusterMappingUsbRB' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if (!$Description -and $Description.length -gt 4096) {
            throw "invalid value for 'Description', the character length must be smaller than or equal to 4096."
        }


		 $DisplayNameMapping =@{
			"Description"="description"; "Map"="map"; "Id"="id"
        }
		
		 $OBJ = @{}
		foreach($parameter in   $PSBoundParameters.Keys){
			#If Specifield map the Display name back
			$OBJ.($DisplayNameMapping.($parameter)) = "$PSBoundParameters.$parameter"
		}

		$PSO = [PSCustomObject]$OBJ


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to POSTClusterMappingUsbRB<PSCustomObject>

.DESCRIPTION

Convert from JSON to POSTClusterMappingUsbRB<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

POSTClusterMappingUsbRB<PSCustomObject>
#>
function ConvertFrom-PVEJsonToPOSTClusterMappingUsbRB {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ProxmoxPVE => PVEPOSTClusterMappingUsbRB' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PVEPOSTClusterMappingUsbRB
        $AllProperties = ("description", "map", "id")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "map"))) { #optional property not found
            $Map = $null
        } else {
            $Map = $JsonParameters.PSobject.Properties["map"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        $PSO = [PSCustomObject]@{
            "description" = ${Description}
            "map" = ${Map}
            "id" = ${Id}
        }

        return $PSO
    }

}


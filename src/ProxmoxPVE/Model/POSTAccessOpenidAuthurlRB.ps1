#
# Proxmox VE Module 1.0
# Generated OpenApiDescription to render Modules via OpenapiGenerator
# Version: 0.1
# Contact: 
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Realm
No description available.
.PARAMETER RedirectUrl
No description available.
.OUTPUTS

POSTAccessOpenidAuthurlRB<PSCustomObject>
#>

function Initialize-PVEPOSTAccessOpenidAuthurlRB {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Realm},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RedirectUrl}
    )

    Process {
        'Creating PSCustomObject: ProxmoxPVE => PVEPOSTAccessOpenidAuthurlRB' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if (!$Realm -and $Realm.length -gt 32) {
            throw "invalid value for 'Realm', the character length must be smaller than or equal to 32."
        }

        if (!$RedirectUrl -and $RedirectUrl.length -gt 255) {
            throw "invalid value for 'RedirectUrl', the character length must be smaller than or equal to 255."
        }


		 $DisplayNameMapping =@{
			"Realm"="realm"; "RedirectUrl"="redirect-url"
        }
		
		 $OBJ = @{}
		foreach($parameter in   $PSBoundParameters.Keys){
			#If Specifield map the Display name back
			$OBJ.($DisplayNameMapping.($parameter)) = "$PSBoundParameters.$parameter"
		}

		$PSO = [PSCustomObject]$OBJ


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to POSTAccessOpenidAuthurlRB<PSCustomObject>

.DESCRIPTION

Convert from JSON to POSTAccessOpenidAuthurlRB<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

POSTAccessOpenidAuthurlRB<PSCustomObject>
#>
function ConvertFrom-PVEJsonToPOSTAccessOpenidAuthurlRB {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ProxmoxPVE => PVEPOSTAccessOpenidAuthurlRB' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PVEPOSTAccessOpenidAuthurlRB
        $AllProperties = ("realm", "redirect-url")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "realm"))) { #optional property not found
            $Realm = $null
        } else {
            $Realm = $JsonParameters.PSobject.Properties["realm"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "redirect-url"))) { #optional property not found
            $RedirectUrl = $null
        } else {
            $RedirectUrl = $JsonParameters.PSobject.Properties["redirect-url"].value
        }

        $PSO = [PSCustomObject]@{
            "realm" = ${Realm}
            "redirect-url" = ${RedirectUrl}
        }

        return $PSO
    }

}


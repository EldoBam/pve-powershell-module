#
# Proxmox PowerShell VE
# Generated module to access all Proxmox VE Api Endpoints. This module has been generated from the proxmox api description v. 8.4.0
# Version: 8.4.0
# Contact: mail@timo-wolf.de
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'ProxmoxPVE' -name 'PVEPVENodesApi' {
    Context 'Get-PVENodes' {
        It 'Test Get-PVENodes' {
            #$TestResult = Get-PVENodes
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesAplinfoByNode' {
        It 'Test Get-PVENodesAplinfoByNode' {
            #$TestResult = Get-PVENodesAplinfoByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesAptByNode' {
        It 'Test Get-PVENodesAptByNode' {
            #$TestResult = Get-PVENodesAptByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesAptChangelogByNode' {
        It 'Test Get-PVENodesAptChangelogByNode' {
            #$TestResult = Get-PVENodesAptChangelogByNode -Node "TEST_VALUE" -GETNodesAptChangelogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesAptRepositoriesByNode' {
        It 'Test Get-PVENodesAptRepositoriesByNode' {
            #$TestResult = Get-PVENodesAptRepositoriesByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesAptUpdateByNode' {
        It 'Test Get-PVENodesAptUpdateByNode' {
            #$TestResult = Get-PVENodesAptUpdateByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesAptVersionsByNode' {
        It 'Test Get-PVENodesAptVersionsByNode' {
            #$TestResult = Get-PVENodesAptVersionsByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesByNode' {
        It 'Test Get-PVENodesByNode' {
            #$TestResult = Get-PVENodesByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCapabilitiesByNode' {
        It 'Test Get-PVENodesCapabilitiesByNode' {
            #$TestResult = Get-PVENodesCapabilitiesByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCapabilitiesQemuByNode' {
        It 'Test Get-PVENodesCapabilitiesQemuByNode' {
            #$TestResult = Get-PVENodesCapabilitiesQemuByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCapabilitiesQemuCpuByNode' {
        It 'Test Get-PVENodesCapabilitiesQemuCpuByNode' {
            #$TestResult = Get-PVENodesCapabilitiesQemuCpuByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCapabilitiesQemuMachinesByNode' {
        It 'Test Get-PVENodesCapabilitiesQemuMachinesByNode' {
            #$TestResult = Get-PVENodesCapabilitiesQemuMachinesByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephByNode' {
        It 'Test Get-PVENodesCephByNode' {
            #$TestResult = Get-PVENodesCephByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephCfgByNode' {
        It 'Test Get-PVENodesCephCfgByNode' {
            #$TestResult = Get-PVENodesCephCfgByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephCfgDbByNode' {
        It 'Test Get-PVENodesCephCfgDbByNode' {
            #$TestResult = Get-PVENodesCephCfgDbByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephCfgRawByNode' {
        It 'Test Get-PVENodesCephCfgRawByNode' {
            #$TestResult = Get-PVENodesCephCfgRawByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephCfgValueByNode' {
        It 'Test Get-PVENodesCephCfgValueByNode' {
            #$TestResult = Get-PVENodesCephCfgValueByNode -Node "TEST_VALUE" -GETNodesCephCfgValueRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephCmdsafetyByNode' {
        It 'Test Get-PVENodesCephCmdsafetyByNode' {
            #$TestResult = Get-PVENodesCephCmdsafetyByNode -Node "TEST_VALUE" -GETNodesCephCmdsafetyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephCrushByNode' {
        It 'Test Get-PVENodesCephCrushByNode' {
            #$TestResult = Get-PVENodesCephCrushByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephFsByNode' {
        It 'Test Get-PVENodesCephFsByNode' {
            #$TestResult = Get-PVENodesCephFsByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephLogByNode' {
        It 'Test Get-PVENodesCephLogByNode' {
            #$TestResult = Get-PVENodesCephLogByNode -Node "TEST_VALUE" -GETNodesCephLogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephMdsByNode' {
        It 'Test Get-PVENodesCephMdsByNode' {
            #$TestResult = Get-PVENodesCephMdsByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephMgrByNode' {
        It 'Test Get-PVENodesCephMgrByNode' {
            #$TestResult = Get-PVENodesCephMgrByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephMonByNode' {
        It 'Test Get-PVENodesCephMonByNode' {
            #$TestResult = Get-PVENodesCephMonByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephOsdByNode' {
        It 'Test Get-PVENodesCephOsdByNode' {
            #$TestResult = Get-PVENodesCephOsdByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephOsdByNodeAndOsdid' {
        It 'Test Get-PVENodesCephOsdByNodeAndOsdid' {
            #$TestResult = Get-PVENodesCephOsdByNodeAndOsdid -Node "TEST_VALUE" -Osdid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephOsdLvinfoByNodeAndOsdid' {
        It 'Test Get-PVENodesCephOsdLvinfoByNodeAndOsdid' {
            #$TestResult = Get-PVENodesCephOsdLvinfoByNodeAndOsdid -Node "TEST_VALUE" -Osdid "TEST_VALUE" -GETNodesCephOsdLvinfoRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephOsdMetadataByNodeAndOsdid' {
        It 'Test Get-PVENodesCephOsdMetadataByNodeAndOsdid' {
            #$TestResult = Get-PVENodesCephOsdMetadataByNodeAndOsdid -Node "TEST_VALUE" -Osdid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephPoolByNode' {
        It 'Test Get-PVENodesCephPoolByNode' {
            #$TestResult = Get-PVENodesCephPoolByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephPoolByNodeAndName' {
        It 'Test Get-PVENodesCephPoolByNodeAndName' {
            #$TestResult = Get-PVENodesCephPoolByNodeAndName -Name "TEST_VALUE" -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephPoolStatusByNodeAndName' {
        It 'Test Get-PVENodesCephPoolStatusByNodeAndName' {
            #$TestResult = Get-PVENodesCephPoolStatusByNodeAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -GETNodesCephPoolStatusRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephRulesByNode' {
        It 'Test Get-PVENodesCephRulesByNode' {
            #$TestResult = Get-PVENodesCephRulesByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephStatusByNode' {
        It 'Test Get-PVENodesCephStatusByNode' {
            #$TestResult = Get-PVENodesCephStatusByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCertificatesAcmeByNode' {
        It 'Test Get-PVENodesCertificatesAcmeByNode' {
            #$TestResult = Get-PVENodesCertificatesAcmeByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCertificatesByNode' {
        It 'Test Get-PVENodesCertificatesByNode' {
            #$TestResult = Get-PVENodesCertificatesByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCertificatesInfoByNode' {
        It 'Test Get-PVENodesCertificatesInfoByNode' {
            #$TestResult = Get-PVENodesCertificatesInfoByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesConfigByNode' {
        It 'Test Get-PVENodesConfigByNode' {
            #$TestResult = Get-PVENodesConfigByNode -Node "TEST_VALUE" -GETNodesConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksByNode' {
        It 'Test Get-PVENodesDisksByNode' {
            #$TestResult = Get-PVENodesDisksByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksDirectoryByNode' {
        It 'Test Get-PVENodesDisksDirectoryByNode' {
            #$TestResult = Get-PVENodesDisksDirectoryByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksListByNode' {
        It 'Test Get-PVENodesDisksListByNode' {
            #$TestResult = Get-PVENodesDisksListByNode -Node "TEST_VALUE" -GETNodesDisksListRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksLvmByNode' {
        It 'Test Get-PVENodesDisksLvmByNode' {
            #$TestResult = Get-PVENodesDisksLvmByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksLvmthinByNode' {
        It 'Test Get-PVENodesDisksLvmthinByNode' {
            #$TestResult = Get-PVENodesDisksLvmthinByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksSmartByNode' {
        It 'Test Get-PVENodesDisksSmartByNode' {
            #$TestResult = Get-PVENodesDisksSmartByNode -Node "TEST_VALUE" -GETNodesDisksSmartRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksZfsByNode' {
        It 'Test Get-PVENodesDisksZfsByNode' {
            #$TestResult = Get-PVENodesDisksZfsByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksZfsByNodeAndName' {
        It 'Test Get-PVENodesDisksZfsByNodeAndName' {
            #$TestResult = Get-PVENodesDisksZfsByNodeAndName -Name "TEST_VALUE" -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDnsByNode' {
        It 'Test Get-PVENodesDnsByNode' {
            #$TestResult = Get-PVENodesDnsByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesFirewallByNode' {
        It 'Test Get-PVENodesFirewallByNode' {
            #$TestResult = Get-PVENodesFirewallByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesFirewallLogByNode' {
        It 'Test Get-PVENodesFirewallLogByNode' {
            #$TestResult = Get-PVENodesFirewallLogByNode -Node "TEST_VALUE" -GETNodesFirewallLogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesFirewallOptionsByNode' {
        It 'Test Get-PVENodesFirewallOptionsByNode' {
            #$TestResult = Get-PVENodesFirewallOptionsByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesFirewallRulesByNode' {
        It 'Test Get-PVENodesFirewallRulesByNode' {
            #$TestResult = Get-PVENodesFirewallRulesByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesFirewallRulesByNodeAndPos' {
        It 'Test Get-PVENodesFirewallRulesByNodeAndPos' {
            #$TestResult = Get-PVENodesFirewallRulesByNodeAndPos -Node "TEST_VALUE" -Pos "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesHardwareByNode' {
        It 'Test Get-PVENodesHardwareByNode' {
            #$TestResult = Get-PVENodesHardwareByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesHardwarePciByNode' {
        It 'Test Get-PVENodesHardwarePciByNode' {
            #$TestResult = Get-PVENodesHardwarePciByNode -Node "TEST_VALUE" -GETNodesHardwarePciRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesHardwarePciByNodeAndPciidormapping' {
        It 'Test Get-PVENodesHardwarePciByNodeAndPciidormapping' {
            #$TestResult = Get-PVENodesHardwarePciByNodeAndPciidormapping -Node "TEST_VALUE" -PciIdOrMapping "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesHardwarePciMdevByNodeAndPciidormapping' {
        It 'Test Get-PVENodesHardwarePciMdevByNodeAndPciidormapping' {
            #$TestResult = Get-PVENodesHardwarePciMdevByNodeAndPciidormapping -Node "TEST_VALUE" -PciIdOrMapping "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesHardwareUsbByNode' {
        It 'Test Get-PVENodesHardwareUsbByNode' {
            #$TestResult = Get-PVENodesHardwareUsbByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesHostsByNode' {
        It 'Test Get-PVENodesHostsByNode' {
            #$TestResult = Get-PVENodesHostsByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesJournalByNode' {
        It 'Test Get-PVENodesJournalByNode' {
            #$TestResult = Get-PVENodesJournalByNode -Node "TEST_VALUE" -GETNodesJournalRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcByNode' {
        It 'Test Get-PVENodesLxcByNode' {
            #$TestResult = Get-PVENodesLxcByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcByNodeAndVmid' {
        It 'Test Get-PVENodesLxcByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcConfigByNodeAndVmid' {
        It 'Test Get-PVENodesLxcConfigByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcConfigByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesLxcConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFeatureByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFeatureByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFeatureByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesLxcFeatureRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallAliasesByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallAliasesByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallAliasesByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallAliasesByNodeAndVmidAndName' {
        It 'Test Get-PVENodesLxcFirewallAliasesByNodeAndVmidAndName' {
            #$TestResult = Get-PVENodesLxcFirewallAliasesByNodeAndVmidAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallIpsetByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallIpsetByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallIpsetByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallIpsetByNodeAndVmidAndName' {
        It 'Test Get-PVENodesLxcFirewallIpsetByNodeAndVmidAndName' {
            #$TestResult = Get-PVENodesLxcFirewallIpsetByNodeAndVmidAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr' {
        It 'Test Get-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr' {
            #$TestResult = Get-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr -Cidr "TEST_VALUE" -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallLogByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallLogByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallLogByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesLxcFirewallLogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallOptionsByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallOptionsByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallOptionsByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallRefsByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallRefsByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallRefsByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesLxcFirewallRefsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallRulesByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallRulesByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallRulesByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallRulesByNodeAndVmidAndPos' {
        It 'Test Get-PVENodesLxcFirewallRulesByNodeAndVmidAndPos' {
            #$TestResult = Get-PVENodesLxcFirewallRulesByNodeAndVmidAndPos -Node "TEST_VALUE" -Pos "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcInterfacesByNodeAndVmid' {
        It 'Test Get-PVENodesLxcInterfacesByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcInterfacesByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcMtunnelwebsocketByNodeAndVmid' {
        It 'Test Get-PVENodesLxcMtunnelwebsocketByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcMtunnelwebsocketByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesLxcMtunnelwebsocketRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcPendingByNodeAndVmid' {
        It 'Test Get-PVENodesLxcPendingByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcPendingByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcRrdByNodeAndVmid' {
        It 'Test Get-PVENodesLxcRrdByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcRrdByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesLxcRrdRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcRrddataByNodeAndVmid' {
        It 'Test Get-PVENodesLxcRrddataByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcRrddataByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesLxcRrddataRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcSnapshotByNodeAndVmid' {
        It 'Test Get-PVENodesLxcSnapshotByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcSnapshotByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcSnapshotByNodeAndVmidAndSnapname' {
        It 'Test Get-PVENodesLxcSnapshotByNodeAndVmidAndSnapname' {
            #$TestResult = Get-PVENodesLxcSnapshotByNodeAndVmidAndSnapname -Node "TEST_VALUE" -Snapname "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcSnapshotConfigByNodeAndVmidAndSnapname' {
        It 'Test Get-PVENodesLxcSnapshotConfigByNodeAndVmidAndSnapname' {
            #$TestResult = Get-PVENodesLxcSnapshotConfigByNodeAndVmidAndSnapname -Node "TEST_VALUE" -Snapname "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcStatusByNodeAndVmid' {
        It 'Test Get-PVENodesLxcStatusByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcStatusByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcStatusCurrentByNodeAndVmid' {
        It 'Test Get-PVENodesLxcStatusCurrentByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcStatusCurrentByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcVncwebsocketByNodeAndVmid' {
        It 'Test Get-PVENodesLxcVncwebsocketByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcVncwebsocketByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesLxcVncwebsocketRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesNetstatByNode' {
        It 'Test Get-PVENodesNetstatByNode' {
            #$TestResult = Get-PVENodesNetstatByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesNetworkByNode' {
        It 'Test Get-PVENodesNetworkByNode' {
            #$TestResult = Get-PVENodesNetworkByNode -Node "TEST_VALUE" -GETNodesNetworkRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesNetworkByNodeAndIface' {
        It 'Test Get-PVENodesNetworkByNodeAndIface' {
            #$TestResult = Get-PVENodesNetworkByNodeAndIface -Iface "TEST_VALUE" -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentExecstatusByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentExecstatusByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentExecstatusByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesQemuAgentExecstatusRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentFilereadByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentFilereadByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentFilereadByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesQemuAgentFilereadRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGetfsinfoByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGetfsinfoByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGetfsinfoByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGethostnameByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGethostnameByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGethostnameByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGetmemoryblockinfoByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGetmemoryblockinfoByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGetmemoryblockinfoByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGetmemoryblocksByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGetmemoryblocksByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGetmemoryblocksByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGetosinfoByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGetosinfoByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGetosinfoByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGettimeByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGettimeByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGettimeByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGettimezoneByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGettimezoneByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGettimezoneByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGetusersByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGetusersByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGetusersByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGetvcpusByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGetvcpusByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGetvcpusByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentInfoByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentInfoByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentInfoByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentNetworkgetinterfacesByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentNetworkgetinterfacesByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentNetworkgetinterfacesByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuByNode' {
        It 'Test Get-PVENodesQemuByNode' {
            #$TestResult = Get-PVENodesQemuByNode -Node "TEST_VALUE" -GETNodesQemuRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuByNodeAndVmid' {
        It 'Test Get-PVENodesQemuByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuCloudinitByNodeAndVmid' {
        It 'Test Get-PVENodesQemuCloudinitByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuCloudinitByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuCloudinitDumpByNodeAndVmid' {
        It 'Test Get-PVENodesQemuCloudinitDumpByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuCloudinitDumpByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesQemuCloudinitDumpRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuConfigByNodeAndVmid' {
        It 'Test Get-PVENodesQemuConfigByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuConfigByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesQemuConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFeatureByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFeatureByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFeatureByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesQemuFeatureRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallAliasesByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallAliasesByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallAliasesByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallAliasesByNodeAndVmidAndName' {
        It 'Test Get-PVENodesQemuFirewallAliasesByNodeAndVmidAndName' {
            #$TestResult = Get-PVENodesQemuFirewallAliasesByNodeAndVmidAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallIpsetByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallIpsetByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallIpsetByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallIpsetByNodeAndVmidAndName' {
        It 'Test Get-PVENodesQemuFirewallIpsetByNodeAndVmidAndName' {
            #$TestResult = Get-PVENodesQemuFirewallIpsetByNodeAndVmidAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr' {
        It 'Test Get-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr' {
            #$TestResult = Get-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr -Cidr "TEST_VALUE" -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallLogByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallLogByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallLogByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesQemuFirewallLogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallOptionsByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallOptionsByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallOptionsByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallRefsByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallRefsByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallRefsByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesQemuFirewallRefsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallRulesByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallRulesByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallRulesByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallRulesByNodeAndVmidAndPos' {
        It 'Test Get-PVENodesQemuFirewallRulesByNodeAndVmidAndPos' {
            #$TestResult = Get-PVENodesQemuFirewallRulesByNodeAndVmidAndPos -Node "TEST_VALUE" -Pos "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuMigrateByNodeAndVmid' {
        It 'Test Get-PVENodesQemuMigrateByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuMigrateByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesQemuMigrateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuMtunnelwebsocketByNodeAndVmid' {
        It 'Test Get-PVENodesQemuMtunnelwebsocketByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuMtunnelwebsocketByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesQemuMtunnelwebsocketRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuPendingByNodeAndVmid' {
        It 'Test Get-PVENodesQemuPendingByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuPendingByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuRrdByNodeAndVmid' {
        It 'Test Get-PVENodesQemuRrdByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuRrdByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesQemuRrdRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuRrddataByNodeAndVmid' {
        It 'Test Get-PVENodesQemuRrddataByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuRrddataByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesQemuRrddataRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuSnapshotByNodeAndVmid' {
        It 'Test Get-PVENodesQemuSnapshotByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuSnapshotByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuSnapshotByNodeAndVmidAndSnapname' {
        It 'Test Get-PVENodesQemuSnapshotByNodeAndVmidAndSnapname' {
            #$TestResult = Get-PVENodesQemuSnapshotByNodeAndVmidAndSnapname -Node "TEST_VALUE" -Snapname "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuSnapshotConfigByNodeAndVmidAndSnapname' {
        It 'Test Get-PVENodesQemuSnapshotConfigByNodeAndVmidAndSnapname' {
            #$TestResult = Get-PVENodesQemuSnapshotConfigByNodeAndVmidAndSnapname -Node "TEST_VALUE" -Snapname "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuStatusByNodeAndVmid' {
        It 'Test Get-PVENodesQemuStatusByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuStatusByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuStatusCurrentByNodeAndVmid' {
        It 'Test Get-PVENodesQemuStatusCurrentByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuStatusCurrentByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuVncwebsocketByNodeAndVmid' {
        It 'Test Get-PVENodesQemuVncwebsocketByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuVncwebsocketByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -GETNodesQemuVncwebsocketRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQueryurlmetadataByNode' {
        It 'Test Get-PVENodesQueryurlmetadataByNode' {
            #$TestResult = Get-PVENodesQueryurlmetadataByNode -Node "TEST_VALUE" -GETNodesQueryurlmetadataRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesReplicationByNode' {
        It 'Test Get-PVENodesReplicationByNode' {
            #$TestResult = Get-PVENodesReplicationByNode -Node "TEST_VALUE" -GETNodesReplicationRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesReplicationByNodeAndId' {
        It 'Test Get-PVENodesReplicationByNodeAndId' {
            #$TestResult = Get-PVENodesReplicationByNodeAndId -Id "TEST_VALUE" -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesReplicationLogByNodeAndId' {
        It 'Test Get-PVENodesReplicationLogByNodeAndId' {
            #$TestResult = Get-PVENodesReplicationLogByNodeAndId -Id "TEST_VALUE" -Node "TEST_VALUE" -GETNodesReplicationLogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesReplicationStatusByNodeAndId' {
        It 'Test Get-PVENodesReplicationStatusByNodeAndId' {
            #$TestResult = Get-PVENodesReplicationStatusByNodeAndId -Id "TEST_VALUE" -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesReportByNode' {
        It 'Test Get-PVENodesReportByNode' {
            #$TestResult = Get-PVENodesReportByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesRrdByNode' {
        It 'Test Get-PVENodesRrdByNode' {
            #$TestResult = Get-PVENodesRrdByNode -Node "TEST_VALUE" -GETNodesRrdRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesRrddataByNode' {
        It 'Test Get-PVENodesRrddataByNode' {
            #$TestResult = Get-PVENodesRrddataByNode -Node "TEST_VALUE" -GETNodesRrddataRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanByNode' {
        It 'Test Get-PVENodesScanByNode' {
            #$TestResult = Get-PVENodesScanByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanCifsByNode' {
        It 'Test Get-PVENodesScanCifsByNode' {
            #$TestResult = Get-PVENodesScanCifsByNode -Node "TEST_VALUE" -GETNodesScanCifsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanGlusterfsByNode' {
        It 'Test Get-PVENodesScanGlusterfsByNode' {
            #$TestResult = Get-PVENodesScanGlusterfsByNode -Node "TEST_VALUE" -GETNodesScanGlusterfsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanIscsiByNode' {
        It 'Test Get-PVENodesScanIscsiByNode' {
            #$TestResult = Get-PVENodesScanIscsiByNode -Node "TEST_VALUE" -GETNodesScanIscsiRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanLvmByNode' {
        It 'Test Get-PVENodesScanLvmByNode' {
            #$TestResult = Get-PVENodesScanLvmByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanLvmthinByNode' {
        It 'Test Get-PVENodesScanLvmthinByNode' {
            #$TestResult = Get-PVENodesScanLvmthinByNode -Node "TEST_VALUE" -GETNodesScanLvmthinRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanNfsByNode' {
        It 'Test Get-PVENodesScanNfsByNode' {
            #$TestResult = Get-PVENodesScanNfsByNode -Node "TEST_VALUE" -GETNodesScanNfsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanPbsByNode' {
        It 'Test Get-PVENodesScanPbsByNode' {
            #$TestResult = Get-PVENodesScanPbsByNode -Node "TEST_VALUE" -GETNodesScanPbsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanZfsByNode' {
        It 'Test Get-PVENodesScanZfsByNode' {
            #$TestResult = Get-PVENodesScanZfsByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesSdnByNode' {
        It 'Test Get-PVENodesSdnByNode' {
            #$TestResult = Get-PVENodesSdnByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesSdnZonesByNode' {
        It 'Test Get-PVENodesSdnZonesByNode' {
            #$TestResult = Get-PVENodesSdnZonesByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesSdnZonesByNodeAndZone' {
        It 'Test Get-PVENodesSdnZonesByNodeAndZone' {
            #$TestResult = Get-PVENodesSdnZonesByNodeAndZone -Node "TEST_VALUE" -Zone "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesSdnZonesContentByNodeAndZone' {
        It 'Test Get-PVENodesSdnZonesContentByNodeAndZone' {
            #$TestResult = Get-PVENodesSdnZonesContentByNodeAndZone -Node "TEST_VALUE" -Zone "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesServicesByNode' {
        It 'Test Get-PVENodesServicesByNode' {
            #$TestResult = Get-PVENodesServicesByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesServicesByNodeAndService' {
        It 'Test Get-PVENodesServicesByNodeAndService' {
            #$TestResult = Get-PVENodesServicesByNodeAndService -Node "TEST_VALUE" -Service "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesServicesStateByNodeAndService' {
        It 'Test Get-PVENodesServicesStateByNodeAndService' {
            #$TestResult = Get-PVENodesServicesStateByNodeAndService -Node "TEST_VALUE" -Service "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStatusByNode' {
        It 'Test Get-PVENodesStatusByNode' {
            #$TestResult = Get-PVENodesStatusByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageByNode' {
        It 'Test Get-PVENodesStorageByNode' {
            #$TestResult = Get-PVENodesStorageByNode -Node "TEST_VALUE" -GETNodesStorageRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageByNodeAndStorage' {
        It 'Test Get-PVENodesStorageByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageByNodeAndStorage -Node "TEST_VALUE" -Storage "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageContentByNodeAndStorage' {
        It 'Test Get-PVENodesStorageContentByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageContentByNodeAndStorage -Node "TEST_VALUE" -Storage "TEST_VALUE" -GETNodesStorageContentRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageContentByNodeAndStorageAndVolume' {
        It 'Test Get-PVENodesStorageContentByNodeAndStorageAndVolume' {
            #$TestResult = Get-PVENodesStorageContentByNodeAndStorageAndVolume -Node "TEST_VALUE" -Storage "TEST_VALUE" -Volume "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageFilerestoreDownloadByNodeAndStorage' {
        It 'Test Get-PVENodesStorageFilerestoreDownloadByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageFilerestoreDownloadByNodeAndStorage -Node "TEST_VALUE" -Storage "TEST_VALUE" -GETNodesStorageFilerestoreDownloadRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageFilerestoreListByNodeAndStorage' {
        It 'Test Get-PVENodesStorageFilerestoreListByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageFilerestoreListByNodeAndStorage -Node "TEST_VALUE" -Storage "TEST_VALUE" -GETNodesStorageFilerestoreListRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageImportmetadataByNodeAndStorage' {
        It 'Test Get-PVENodesStorageImportmetadataByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageImportmetadataByNodeAndStorage -Node "TEST_VALUE" -Storage "TEST_VALUE" -GETNodesStorageImportmetadataRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStoragePrunebackupsByNodeAndStorage' {
        It 'Test Get-PVENodesStoragePrunebackupsByNodeAndStorage' {
            #$TestResult = Get-PVENodesStoragePrunebackupsByNodeAndStorage -Node "TEST_VALUE" -Storage "TEST_VALUE" -GETNodesStoragePrunebackupsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageRrdByNodeAndStorage' {
        It 'Test Get-PVENodesStorageRrdByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageRrdByNodeAndStorage -Node "TEST_VALUE" -Storage "TEST_VALUE" -GETNodesStorageRrdRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageRrddataByNodeAndStorage' {
        It 'Test Get-PVENodesStorageRrddataByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageRrddataByNodeAndStorage -Node "TEST_VALUE" -Storage "TEST_VALUE" -GETNodesStorageRrddataRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageStatusByNodeAndStorage' {
        It 'Test Get-PVENodesStorageStatusByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageStatusByNodeAndStorage -Node "TEST_VALUE" -Storage "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesSubscriptionByNode' {
        It 'Test Get-PVENodesSubscriptionByNode' {
            #$TestResult = Get-PVENodesSubscriptionByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesSyslogByNode' {
        It 'Test Get-PVENodesSyslogByNode' {
            #$TestResult = Get-PVENodesSyslogByNode -Node "TEST_VALUE" -GETNodesSyslogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesTasksByNode' {
        It 'Test Get-PVENodesTasksByNode' {
            #$TestResult = Get-PVENodesTasksByNode -Node "TEST_VALUE" -GETNodesTasksRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesTasksByNodeAndUpid' {
        It 'Test Get-PVENodesTasksByNodeAndUpid' {
            #$TestResult = Get-PVENodesTasksByNodeAndUpid -Node "TEST_VALUE" -Upid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesTasksLogByNodeAndUpid' {
        It 'Test Get-PVENodesTasksLogByNodeAndUpid' {
            #$TestResult = Get-PVENodesTasksLogByNodeAndUpid -Node "TEST_VALUE" -Upid "TEST_VALUE" -GETNodesTasksLogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesTasksStatusByNodeAndUpid' {
        It 'Test Get-PVENodesTasksStatusByNodeAndUpid' {
            #$TestResult = Get-PVENodesTasksStatusByNodeAndUpid -Node "TEST_VALUE" -Upid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesTimeByNode' {
        It 'Test Get-PVENodesTimeByNode' {
            #$TestResult = Get-PVENodesTimeByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesVersionByNode' {
        It 'Test Get-PVENodesVersionByNode' {
            #$TestResult = Get-PVENodesVersionByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesVncwebsocketByNode' {
        It 'Test Get-PVENodesVncwebsocketByNode' {
            #$TestResult = Get-PVENodesVncwebsocketByNode -Node "TEST_VALUE" -GETNodesVncwebsocketRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesVzdumpDefaultsByNode' {
        It 'Test Get-PVENodesVzdumpDefaultsByNode' {
            #$TestResult = Get-PVENodesVzdumpDefaultsByNode -Node "TEST_VALUE" -GETNodesVzdumpDefaultsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesVzdumpExtractconfigByNode' {
        It 'Test Get-PVENodesVzdumpExtractconfigByNode' {
            #$TestResult = Get-PVENodesVzdumpExtractconfigByNode -Node "TEST_VALUE" -GETNodesVzdumpExtractconfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesAplinfoByNode' {
        It 'Test New-PVENodesAplinfoByNode' {
            #$TestResult = New-PVENodesAplinfoByNode -Node "TEST_VALUE" -POSTNodesAplinfoRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesAptRepositoriesByNode' {
        It 'Test New-PVENodesAptRepositoriesByNode' {
            #$TestResult = New-PVENodesAptRepositoriesByNode -Node "TEST_VALUE" -POSTNodesAptRepositoriesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesAptUpdateByNode' {
        It 'Test New-PVENodesAptUpdateByNode' {
            #$TestResult = New-PVENodesAptUpdateByNode -Node "TEST_VALUE" -POSTNodesAptUpdateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephFsByNodeAndName' {
        It 'Test New-PVENodesCephFsByNodeAndName' {
            #$TestResult = New-PVENodesCephFsByNodeAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -POSTNodesCephFsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephInitByNode' {
        It 'Test New-PVENodesCephInitByNode' {
            #$TestResult = New-PVENodesCephInitByNode -Node "TEST_VALUE" -POSTNodesCephInitRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephMdsByNodeAndName' {
        It 'Test New-PVENodesCephMdsByNodeAndName' {
            #$TestResult = New-PVENodesCephMdsByNodeAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -POSTNodesCephMdsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephMgrByNodeAndId' {
        It 'Test New-PVENodesCephMgrByNodeAndId' {
            #$TestResult = New-PVENodesCephMgrByNodeAndId -Id "TEST_VALUE" -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephMonByNodeAndMonid' {
        It 'Test New-PVENodesCephMonByNodeAndMonid' {
            #$TestResult = New-PVENodesCephMonByNodeAndMonid -Monid "TEST_VALUE" -Node "TEST_VALUE" -POSTNodesCephMonRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephOsdByNode' {
        It 'Test New-PVENodesCephOsdByNode' {
            #$TestResult = New-PVENodesCephOsdByNode -Node "TEST_VALUE" -POSTNodesCephOsdRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephOsdInByNodeAndOsdid' {
        It 'Test New-PVENodesCephOsdInByNodeAndOsdid' {
            #$TestResult = New-PVENodesCephOsdInByNodeAndOsdid -Node "TEST_VALUE" -Osdid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephOsdOutByNodeAndOsdid' {
        It 'Test New-PVENodesCephOsdOutByNodeAndOsdid' {
            #$TestResult = New-PVENodesCephOsdOutByNodeAndOsdid -Node "TEST_VALUE" -Osdid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephOsdScrubByNodeAndOsdid' {
        It 'Test New-PVENodesCephOsdScrubByNodeAndOsdid' {
            #$TestResult = New-PVENodesCephOsdScrubByNodeAndOsdid -Node "TEST_VALUE" -Osdid "TEST_VALUE" -POSTNodesCephOsdScrubRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephPoolByNode' {
        It 'Test New-PVENodesCephPoolByNode' {
            #$TestResult = New-PVENodesCephPoolByNode -Node "TEST_VALUE" -POSTNodesCephPoolRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephRestartByNode' {
        It 'Test New-PVENodesCephRestartByNode' {
            #$TestResult = New-PVENodesCephRestartByNode -Node "TEST_VALUE" -POSTNodesCephRestartRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephStartByNode' {
        It 'Test New-PVENodesCephStartByNode' {
            #$TestResult = New-PVENodesCephStartByNode -Node "TEST_VALUE" -POSTNodesCephStartRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephStopByNode' {
        It 'Test New-PVENodesCephStopByNode' {
            #$TestResult = New-PVENodesCephStopByNode -Node "TEST_VALUE" -POSTNodesCephStopRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCertificatesAcmeCertificateByNode' {
        It 'Test New-PVENodesCertificatesAcmeCertificateByNode' {
            #$TestResult = New-PVENodesCertificatesAcmeCertificateByNode -Node "TEST_VALUE" -POSTNodesCertificatesAcmeCertificateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCertificatesCustomByNode' {
        It 'Test New-PVENodesCertificatesCustomByNode' {
            #$TestResult = New-PVENodesCertificatesCustomByNode -Node "TEST_VALUE" -POSTNodesCertificatesCustomRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesDisksDirectoryByNode' {
        It 'Test New-PVENodesDisksDirectoryByNode' {
            #$TestResult = New-PVENodesDisksDirectoryByNode -Node "TEST_VALUE" -POSTNodesDisksDirectoryRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesDisksInitgptByNode' {
        It 'Test New-PVENodesDisksInitgptByNode' {
            #$TestResult = New-PVENodesDisksInitgptByNode -Node "TEST_VALUE" -POSTNodesDisksInitgptRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesDisksLvmByNode' {
        It 'Test New-PVENodesDisksLvmByNode' {
            #$TestResult = New-PVENodesDisksLvmByNode -Node "TEST_VALUE" -POSTNodesDisksLvmRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesDisksLvmthinByNode' {
        It 'Test New-PVENodesDisksLvmthinByNode' {
            #$TestResult = New-PVENodesDisksLvmthinByNode -Node "TEST_VALUE" -POSTNodesDisksLvmthinRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesDisksZfsByNode' {
        It 'Test New-PVENodesDisksZfsByNode' {
            #$TestResult = New-PVENodesDisksZfsByNode -Node "TEST_VALUE" -POSTNodesDisksZfsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesExecuteByNode' {
        It 'Test New-PVENodesExecuteByNode' {
            #$TestResult = New-PVENodesExecuteByNode -Node "TEST_VALUE" -POSTNodesExecuteRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesFirewallRulesByNode' {
        It 'Test New-PVENodesFirewallRulesByNode' {
            #$TestResult = New-PVENodesFirewallRulesByNode -Node "TEST_VALUE" -POSTNodesFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesHostsByNode' {
        It 'Test New-PVENodesHostsByNode' {
            #$TestResult = New-PVENodesHostsByNode -Node "TEST_VALUE" -POSTNodesHostsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcByNode' {
        It 'Test New-PVENodesLxcByNode' {
            #$TestResult = New-PVENodesLxcByNode -Node "TEST_VALUE" -POSTNodesLxcRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcCloneByNodeAndVmid' {
        It 'Test New-PVENodesLxcCloneByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcCloneByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcCloneRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcFirewallAliasesByNodeAndVmid' {
        It 'Test New-PVENodesLxcFirewallAliasesByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcFirewallAliasesByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcFirewallAliasesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcFirewallIpsetByNodeAndVmid' {
        It 'Test New-PVENodesLxcFirewallIpsetByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcFirewallIpsetByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcFirewallIpsetByNodeAndVmidAndName' {
        It 'Test New-PVENodesLxcFirewallIpsetByNodeAndVmidAndName' {
            #$TestResult = New-PVENodesLxcFirewallIpsetByNodeAndVmidAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcFirewallRulesByNodeAndVmid' {
        It 'Test New-PVENodesLxcFirewallRulesByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcFirewallRulesByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcMigrateByNodeAndVmid' {
        It 'Test New-PVENodesLxcMigrateByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcMigrateByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcMigrateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcMovevolumeByNodeAndVmid' {
        It 'Test New-PVENodesLxcMovevolumeByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcMovevolumeByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcMovevolumeRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcMtunnelByNodeAndVmid' {
        It 'Test New-PVENodesLxcMtunnelByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcMtunnelByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcMtunnelRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcRemotemigrateByNodeAndVmid' {
        It 'Test New-PVENodesLxcRemotemigrateByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcRemotemigrateByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcRemotemigrateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcSnapshotByNodeAndVmid' {
        It 'Test New-PVENodesLxcSnapshotByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcSnapshotByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcSnapshotRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcSnapshotRollbackByNodeAndVmidAndSnapname' {
        It 'Test New-PVENodesLxcSnapshotRollbackByNodeAndVmidAndSnapname' {
            #$TestResult = New-PVENodesLxcSnapshotRollbackByNodeAndVmidAndSnapname -Node "TEST_VALUE" -Snapname "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcSnapshotRollbackRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcSpiceproxyByNodeAndVmid' {
        It 'Test New-PVENodesLxcSpiceproxyByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcSpiceproxyByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcSpiceproxyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcStatusRebootByNodeAndVmid' {
        It 'Test New-PVENodesLxcStatusRebootByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcStatusRebootByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcStatusRebootRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcStatusResumeByNodeAndVmid' {
        It 'Test New-PVENodesLxcStatusResumeByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcStatusResumeByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcStatusShutdownByNodeAndVmid' {
        It 'Test New-PVENodesLxcStatusShutdownByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcStatusShutdownByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcStatusShutdownRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcStatusStartByNodeAndVmid' {
        It 'Test New-PVENodesLxcStatusStartByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcStatusStartByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcStatusStartRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcStatusStopByNodeAndVmid' {
        It 'Test New-PVENodesLxcStatusStopByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcStatusStopByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcStatusStopRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcStatusSuspendByNodeAndVmid' {
        It 'Test New-PVENodesLxcStatusSuspendByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcStatusSuspendByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcTemplateByNodeAndVmid' {
        It 'Test New-PVENodesLxcTemplateByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcTemplateByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcTermproxyByNodeAndVmid' {
        It 'Test New-PVENodesLxcTermproxyByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcTermproxyByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcVncproxyByNodeAndVmid' {
        It 'Test New-PVENodesLxcVncproxyByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcVncproxyByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesLxcVncproxyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesMigrateallByNode' {
        It 'Test New-PVENodesMigrateallByNode' {
            #$TestResult = New-PVENodesMigrateallByNode -Node "TEST_VALUE" -POSTNodesMigrateallRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesNetworkByNode' {
        It 'Test New-PVENodesNetworkByNode' {
            #$TestResult = New-PVENodesNetworkByNode -Node "TEST_VALUE" -POSTNodesNetworkRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuAgentRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentExecByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentExecByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentExecByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuAgentExecRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentFilewriteByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentFilewriteByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentFilewriteByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuAgentFilewriteRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentFsfreezefreezeByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentFsfreezefreezeByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentFsfreezefreezeByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentFsfreezestatusByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentFsfreezestatusByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentFsfreezestatusByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentFsfreezethawByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentFsfreezethawByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentFsfreezethawByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentFstrimByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentFstrimByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentFstrimByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentPingByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentPingByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentPingByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentSetuserpasswordByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentSetuserpasswordByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentSetuserpasswordByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuAgentSetuserpasswordRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentShutdownByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentShutdownByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentShutdownByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentSuspenddiskByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentSuspenddiskByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentSuspenddiskByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentSuspendhybridByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentSuspendhybridByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentSuspendhybridByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentSuspendramByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentSuspendramByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentSuspendramByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuByNode' {
        It 'Test New-PVENodesQemuByNode' {
            #$TestResult = New-PVENodesQemuByNode -Node "TEST_VALUE" -POSTNodesQemuRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuCloneByNodeAndVmid' {
        It 'Test New-PVENodesQemuCloneByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuCloneByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuCloneRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuConfigByNodeAndVmid' {
        It 'Test New-PVENodesQemuConfigByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuConfigByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuFirewallAliasesByNodeAndVmid' {
        It 'Test New-PVENodesQemuFirewallAliasesByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuFirewallAliasesByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuFirewallAliasesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuFirewallIpsetByNodeAndVmid' {
        It 'Test New-PVENodesQemuFirewallIpsetByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuFirewallIpsetByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuFirewallIpsetByNodeAndVmidAndName' {
        It 'Test New-PVENodesQemuFirewallIpsetByNodeAndVmidAndName' {
            #$TestResult = New-PVENodesQemuFirewallIpsetByNodeAndVmidAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuFirewallRulesByNodeAndVmid' {
        It 'Test New-PVENodesQemuFirewallRulesByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuFirewallRulesByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuMigrateByNodeAndVmid' {
        It 'Test New-PVENodesQemuMigrateByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuMigrateByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuMigrateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuMonitorByNodeAndVmid' {
        It 'Test New-PVENodesQemuMonitorByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuMonitorByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuMonitorRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuMovediskByNodeAndVmid' {
        It 'Test New-PVENodesQemuMovediskByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuMovediskByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuMovediskRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuMtunnelByNodeAndVmid' {
        It 'Test New-PVENodesQemuMtunnelByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuMtunnelByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuMtunnelRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuRemotemigrateByNodeAndVmid' {
        It 'Test New-PVENodesQemuRemotemigrateByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuRemotemigrateByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuRemotemigrateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuSnapshotByNodeAndVmid' {
        It 'Test New-PVENodesQemuSnapshotByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuSnapshotByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuSnapshotRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuSnapshotRollbackByNodeAndVmidAndSnapname' {
        It 'Test New-PVENodesQemuSnapshotRollbackByNodeAndVmidAndSnapname' {
            #$TestResult = New-PVENodesQemuSnapshotRollbackByNodeAndVmidAndSnapname -Node "TEST_VALUE" -Snapname "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuSnapshotRollbackRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuSpiceproxyByNodeAndVmid' {
        It 'Test New-PVENodesQemuSpiceproxyByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuSpiceproxyByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuSpiceproxyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusRebootByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusRebootByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusRebootByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuStatusRebootRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusResetByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusResetByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusResetByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuStatusResetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusResumeByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusResumeByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusResumeByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuStatusResumeRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusShutdownByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusShutdownByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusShutdownByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuStatusShutdownRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusStartByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusStartByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusStartByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuStatusStartRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusStopByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusStopByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusStopByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuStatusStopRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusSuspendByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusSuspendByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusSuspendByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuStatusSuspendRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuTemplateByNodeAndVmid' {
        It 'Test New-PVENodesQemuTemplateByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuTemplateByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuTemplateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuTermproxyByNodeAndVmid' {
        It 'Test New-PVENodesQemuTermproxyByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuTermproxyByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuTermproxyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuVncproxyByNodeAndVmid' {
        It 'Test New-PVENodesQemuVncproxyByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuVncproxyByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -POSTNodesQemuVncproxyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesReplicationSchedulenowByNodeAndId' {
        It 'Test New-PVENodesReplicationSchedulenowByNodeAndId' {
            #$TestResult = New-PVENodesReplicationSchedulenowByNodeAndId -Id "TEST_VALUE" -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesServicesReloadByNodeAndService' {
        It 'Test New-PVENodesServicesReloadByNodeAndService' {
            #$TestResult = New-PVENodesServicesReloadByNodeAndService -Node "TEST_VALUE" -Service "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesServicesRestartByNodeAndService' {
        It 'Test New-PVENodesServicesRestartByNodeAndService' {
            #$TestResult = New-PVENodesServicesRestartByNodeAndService -Node "TEST_VALUE" -Service "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesServicesStartByNodeAndService' {
        It 'Test New-PVENodesServicesStartByNodeAndService' {
            #$TestResult = New-PVENodesServicesStartByNodeAndService -Node "TEST_VALUE" -Service "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesServicesStopByNodeAndService' {
        It 'Test New-PVENodesServicesStopByNodeAndService' {
            #$TestResult = New-PVENodesServicesStopByNodeAndService -Node "TEST_VALUE" -Service "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesSpiceshellByNode' {
        It 'Test New-PVENodesSpiceshellByNode' {
            #$TestResult = New-PVENodesSpiceshellByNode -Node "TEST_VALUE" -POSTNodesSpiceshellRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStartallByNode' {
        It 'Test New-PVENodesStartallByNode' {
            #$TestResult = New-PVENodesStartallByNode -Node "TEST_VALUE" -POSTNodesStartallRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStatusByNode' {
        It 'Test New-PVENodesStatusByNode' {
            #$TestResult = New-PVENodesStatusByNode -Node "TEST_VALUE" -POSTNodesStatusRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStopallByNode' {
        It 'Test New-PVENodesStopallByNode' {
            #$TestResult = New-PVENodesStopallByNode -Node "TEST_VALUE" -POSTNodesStopallRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStorageContentByNodeAndStorage' {
        It 'Test New-PVENodesStorageContentByNodeAndStorage' {
            #$TestResult = New-PVENodesStorageContentByNodeAndStorage -Node "TEST_VALUE" -Storage "TEST_VALUE" -POSTNodesStorageContentRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStorageContentByNodeAndStorageAndVolume' {
        It 'Test New-PVENodesStorageContentByNodeAndStorageAndVolume' {
            #$TestResult = New-PVENodesStorageContentByNodeAndStorageAndVolume -Node "TEST_VALUE" -Storage "TEST_VALUE" -Volume "TEST_VALUE" -POSTNodesStorageContentRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStorageDownloadurlByNodeAndStorage' {
        It 'Test New-PVENodesStorageDownloadurlByNodeAndStorage' {
            #$TestResult = New-PVENodesStorageDownloadurlByNodeAndStorage -Node "TEST_VALUE" -Storage "TEST_VALUE" -POSTNodesStorageDownloadurlRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStorageUploadByNodeAndStorage' {
        It 'Test New-PVENodesStorageUploadByNodeAndStorage' {
            #$TestResult = New-PVENodesStorageUploadByNodeAndStorage -Node "TEST_VALUE" -Storage "TEST_VALUE" -POSTNodesStorageUploadRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesSubscriptionByNode' {
        It 'Test New-PVENodesSubscriptionByNode' {
            #$TestResult = New-PVENodesSubscriptionByNode -Node "TEST_VALUE" -POSTNodesSubscriptionRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesSuspendallByNode' {
        It 'Test New-PVENodesSuspendallByNode' {
            #$TestResult = New-PVENodesSuspendallByNode -Node "TEST_VALUE" -POSTNodesSuspendallRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesTermproxyByNode' {
        It 'Test New-PVENodesTermproxyByNode' {
            #$TestResult = New-PVENodesTermproxyByNode -Node "TEST_VALUE" -POSTNodesTermproxyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesVncshellByNode' {
        It 'Test New-PVENodesVncshellByNode' {
            #$TestResult = New-PVENodesVncshellByNode -Node "TEST_VALUE" -POSTNodesVncshellRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesVzdumpByNode' {
        It 'Test New-PVENodesVzdumpByNode' {
            #$TestResult = New-PVENodesVzdumpByNode -Node "TEST_VALUE" -POSTNodesVzdumpRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesWakeonlanByNode' {
        It 'Test New-PVENodesWakeonlanByNode' {
            #$TestResult = New-PVENodesWakeonlanByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCephMdsByNodeAndName' {
        It 'Test Remove-PVENodesCephMdsByNodeAndName' {
            #$TestResult = Remove-PVENodesCephMdsByNodeAndName -Name "TEST_VALUE" -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCephMgrByNodeAndId' {
        It 'Test Remove-PVENodesCephMgrByNodeAndId' {
            #$TestResult = Remove-PVENodesCephMgrByNodeAndId -Id "TEST_VALUE" -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCephMonByNodeAndMonid' {
        It 'Test Remove-PVENodesCephMonByNodeAndMonid' {
            #$TestResult = Remove-PVENodesCephMonByNodeAndMonid -Monid "TEST_VALUE" -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCephOsdByNodeAndOsdid' {
        It 'Test Remove-PVENodesCephOsdByNodeAndOsdid' {
            #$TestResult = Remove-PVENodesCephOsdByNodeAndOsdid -Node "TEST_VALUE" -Osdid "TEST_VALUE" -DELETENodesCephOsdRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCephPoolByNodeAndName' {
        It 'Test Remove-PVENodesCephPoolByNodeAndName' {
            #$TestResult = Remove-PVENodesCephPoolByNodeAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -DELETENodesCephPoolRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCertificatesAcmeCertificateByNode' {
        It 'Test Remove-PVENodesCertificatesAcmeCertificateByNode' {
            #$TestResult = Remove-PVENodesCertificatesAcmeCertificateByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCertificatesCustomByNode' {
        It 'Test Remove-PVENodesCertificatesCustomByNode' {
            #$TestResult = Remove-PVENodesCertificatesCustomByNode -Node "TEST_VALUE" -DELETENodesCertificatesCustomRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesDisksDirectoryByNodeAndName' {
        It 'Test Remove-PVENodesDisksDirectoryByNodeAndName' {
            #$TestResult = Remove-PVENodesDisksDirectoryByNodeAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -DELETENodesDisksDirectoryRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesDisksLvmByNodeAndName' {
        It 'Test Remove-PVENodesDisksLvmByNodeAndName' {
            #$TestResult = Remove-PVENodesDisksLvmByNodeAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -DELETENodesDisksLvmRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesDisksLvmthinByNodeAndName' {
        It 'Test Remove-PVENodesDisksLvmthinByNodeAndName' {
            #$TestResult = Remove-PVENodesDisksLvmthinByNodeAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -DELETENodesDisksLvmthinRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesDisksZfsByNodeAndName' {
        It 'Test Remove-PVENodesDisksZfsByNodeAndName' {
            #$TestResult = Remove-PVENodesDisksZfsByNodeAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -DELETENodesDisksZfsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesFirewallRulesByNodeAndPos' {
        It 'Test Remove-PVENodesFirewallRulesByNodeAndPos' {
            #$TestResult = Remove-PVENodesFirewallRulesByNodeAndPos -Node "TEST_VALUE" -Pos "TEST_VALUE" -DELETENodesFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesLxcByNodeAndVmid' {
        It 'Test Remove-PVENodesLxcByNodeAndVmid' {
            #$TestResult = Remove-PVENodesLxcByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -DELETENodesLxcRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesLxcFirewallAliasesByNodeAndVmidAndName' {
        It 'Test Remove-PVENodesLxcFirewallAliasesByNodeAndVmidAndName' {
            #$TestResult = Remove-PVENodesLxcFirewallAliasesByNodeAndVmidAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE" -DELETENodesLxcFirewallAliasesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesLxcFirewallIpsetByNodeAndVmidAndName' {
        It 'Test Remove-PVENodesLxcFirewallIpsetByNodeAndVmidAndName' {
            #$TestResult = Remove-PVENodesLxcFirewallIpsetByNodeAndVmidAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE" -DELETENodesLxcFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr' {
        It 'Test Remove-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr' {
            #$TestResult = Remove-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr -Cidr "TEST_VALUE" -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE" -DELETENodesLxcFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesLxcFirewallRulesByNodeAndVmidAndPos' {
        It 'Test Remove-PVENodesLxcFirewallRulesByNodeAndVmidAndPos' {
            #$TestResult = Remove-PVENodesLxcFirewallRulesByNodeAndVmidAndPos -Node "TEST_VALUE" -Pos "TEST_VALUE" -Vmid "TEST_VALUE" -DELETENodesLxcFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesLxcSnapshotByNodeAndVmidAndSnapname' {
        It 'Test Remove-PVENodesLxcSnapshotByNodeAndVmidAndSnapname' {
            #$TestResult = Remove-PVENodesLxcSnapshotByNodeAndVmidAndSnapname -Node "TEST_VALUE" -Snapname "TEST_VALUE" -Vmid "TEST_VALUE" -DELETENodesLxcSnapshotRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesNetworkByNode' {
        It 'Test Remove-PVENodesNetworkByNode' {
            #$TestResult = Remove-PVENodesNetworkByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesNetworkByNodeAndIface' {
        It 'Test Remove-PVENodesNetworkByNodeAndIface' {
            #$TestResult = Remove-PVENodesNetworkByNodeAndIface -Iface "TEST_VALUE" -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesQemuByNodeAndVmid' {
        It 'Test Remove-PVENodesQemuByNodeAndVmid' {
            #$TestResult = Remove-PVENodesQemuByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -DELETENodesQemuRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesQemuFirewallAliasesByNodeAndVmidAndName' {
        It 'Test Remove-PVENodesQemuFirewallAliasesByNodeAndVmidAndName' {
            #$TestResult = Remove-PVENodesQemuFirewallAliasesByNodeAndVmidAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE" -DELETENodesQemuFirewallAliasesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesQemuFirewallIpsetByNodeAndVmidAndName' {
        It 'Test Remove-PVENodesQemuFirewallIpsetByNodeAndVmidAndName' {
            #$TestResult = Remove-PVENodesQemuFirewallIpsetByNodeAndVmidAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE" -DELETENodesQemuFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr' {
        It 'Test Remove-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr' {
            #$TestResult = Remove-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr -Cidr "TEST_VALUE" -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE" -DELETENodesQemuFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesQemuFirewallRulesByNodeAndVmidAndPos' {
        It 'Test Remove-PVENodesQemuFirewallRulesByNodeAndVmidAndPos' {
            #$TestResult = Remove-PVENodesQemuFirewallRulesByNodeAndVmidAndPos -Node "TEST_VALUE" -Pos "TEST_VALUE" -Vmid "TEST_VALUE" -DELETENodesQemuFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesQemuSnapshotByNodeAndVmidAndSnapname' {
        It 'Test Remove-PVENodesQemuSnapshotByNodeAndVmidAndSnapname' {
            #$TestResult = Remove-PVENodesQemuSnapshotByNodeAndVmidAndSnapname -Node "TEST_VALUE" -Snapname "TEST_VALUE" -Vmid "TEST_VALUE" -DELETENodesQemuSnapshotRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesStorageContentByNodeAndStorageAndVolume' {
        It 'Test Remove-PVENodesStorageContentByNodeAndStorageAndVolume' {
            #$TestResult = Remove-PVENodesStorageContentByNodeAndStorageAndVolume -Node "TEST_VALUE" -Storage "TEST_VALUE" -Volume "TEST_VALUE" -DELETENodesStorageContentRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesStoragePrunebackupsByNodeAndStorage' {
        It 'Test Remove-PVENodesStoragePrunebackupsByNodeAndStorage' {
            #$TestResult = Remove-PVENodesStoragePrunebackupsByNodeAndStorage -Node "TEST_VALUE" -Storage "TEST_VALUE" -DELETENodesStoragePrunebackupsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesSubscriptionByNode' {
        It 'Test Remove-PVENodesSubscriptionByNode' {
            #$TestResult = Remove-PVENodesSubscriptionByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesTasksByNodeAndUpid' {
        It 'Test Remove-PVENodesTasksByNodeAndUpid' {
            #$TestResult = Remove-PVENodesTasksByNodeAndUpid -Node "TEST_VALUE" -Upid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesAptRepositoriesByNode' {
        It 'Test Set-PVENodesAptRepositoriesByNode' {
            #$TestResult = Set-PVENodesAptRepositoriesByNode -Node "TEST_VALUE" -PUTNodesAptRepositoriesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesCephPoolByNodeAndName' {
        It 'Test Set-PVENodesCephPoolByNodeAndName' {
            #$TestResult = Set-PVENodesCephPoolByNodeAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -PUTNodesCephPoolRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesCertificatesAcmeCertificateByNode' {
        It 'Test Set-PVENodesCertificatesAcmeCertificateByNode' {
            #$TestResult = Set-PVENodesCertificatesAcmeCertificateByNode -Node "TEST_VALUE" -PUTNodesCertificatesAcmeCertificateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesConfigByNode' {
        It 'Test Set-PVENodesConfigByNode' {
            #$TestResult = Set-PVENodesConfigByNode -Node "TEST_VALUE" -PUTNodesConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesDisksWipediskByNode' {
        It 'Test Set-PVENodesDisksWipediskByNode' {
            #$TestResult = Set-PVENodesDisksWipediskByNode -Node "TEST_VALUE" -PUTNodesDisksWipediskRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesDnsByNode' {
        It 'Test Set-PVENodesDnsByNode' {
            #$TestResult = Set-PVENodesDnsByNode -Node "TEST_VALUE" -PUTNodesDnsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesFirewallOptionsByNode' {
        It 'Test Set-PVENodesFirewallOptionsByNode' {
            #$TestResult = Set-PVENodesFirewallOptionsByNode -Node "TEST_VALUE" -PUTNodesFirewallOptionsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesFirewallRulesByNodeAndPos' {
        It 'Test Set-PVENodesFirewallRulesByNodeAndPos' {
            #$TestResult = Set-PVENodesFirewallRulesByNodeAndPos -Node "TEST_VALUE" -Pos "TEST_VALUE" -PUTNodesFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcConfigByNodeAndVmid' {
        It 'Test Set-PVENodesLxcConfigByNodeAndVmid' {
            #$TestResult = Set-PVENodesLxcConfigByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesLxcConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcFirewallAliasesByNodeAndVmidAndName' {
        It 'Test Set-PVENodesLxcFirewallAliasesByNodeAndVmidAndName' {
            #$TestResult = Set-PVENodesLxcFirewallAliasesByNodeAndVmidAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesLxcFirewallAliasesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr' {
        It 'Test Set-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr' {
            #$TestResult = Set-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr -Cidr "TEST_VALUE" -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesLxcFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcFirewallOptionsByNodeAndVmid' {
        It 'Test Set-PVENodesLxcFirewallOptionsByNodeAndVmid' {
            #$TestResult = Set-PVENodesLxcFirewallOptionsByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesLxcFirewallOptionsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcFirewallRulesByNodeAndVmidAndPos' {
        It 'Test Set-PVENodesLxcFirewallRulesByNodeAndVmidAndPos' {
            #$TestResult = Set-PVENodesLxcFirewallRulesByNodeAndVmidAndPos -Node "TEST_VALUE" -Pos "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesLxcFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcResizeByNodeAndVmid' {
        It 'Test Set-PVENodesLxcResizeByNodeAndVmid' {
            #$TestResult = Set-PVENodesLxcResizeByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesLxcResizeRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcSnapshotConfigByNodeAndVmidAndSnapname' {
        It 'Test Set-PVENodesLxcSnapshotConfigByNodeAndVmidAndSnapname' {
            #$TestResult = Set-PVENodesLxcSnapshotConfigByNodeAndVmidAndSnapname -Node "TEST_VALUE" -Snapname "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesLxcSnapshotConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesNetworkByNode' {
        It 'Test Set-PVENodesNetworkByNode' {
            #$TestResult = Set-PVENodesNetworkByNode -Node "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesNetworkByNodeAndIface' {
        It 'Test Set-PVENodesNetworkByNodeAndIface' {
            #$TestResult = Set-PVENodesNetworkByNodeAndIface -Iface "TEST_VALUE" -Node "TEST_VALUE" -PUTNodesNetworkRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuCloudinitByNodeAndVmid' {
        It 'Test Set-PVENodesQemuCloudinitByNodeAndVmid' {
            #$TestResult = Set-PVENodesQemuCloudinitByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuConfigByNodeAndVmid' {
        It 'Test Set-PVENodesQemuConfigByNodeAndVmid' {
            #$TestResult = Set-PVENodesQemuConfigByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesQemuConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuFirewallAliasesByNodeAndVmidAndName' {
        It 'Test Set-PVENodesQemuFirewallAliasesByNodeAndVmidAndName' {
            #$TestResult = Set-PVENodesQemuFirewallAliasesByNodeAndVmidAndName -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesQemuFirewallAliasesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr' {
        It 'Test Set-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr' {
            #$TestResult = Set-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr -Cidr "TEST_VALUE" -Name "TEST_VALUE" -Node "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesQemuFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuFirewallOptionsByNodeAndVmid' {
        It 'Test Set-PVENodesQemuFirewallOptionsByNodeAndVmid' {
            #$TestResult = Set-PVENodesQemuFirewallOptionsByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesQemuFirewallOptionsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuFirewallRulesByNodeAndVmidAndPos' {
        It 'Test Set-PVENodesQemuFirewallRulesByNodeAndVmidAndPos' {
            #$TestResult = Set-PVENodesQemuFirewallRulesByNodeAndVmidAndPos -Node "TEST_VALUE" -Pos "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesQemuFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuResizeByNodeAndVmid' {
        It 'Test Set-PVENodesQemuResizeByNodeAndVmid' {
            #$TestResult = Set-PVENodesQemuResizeByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesQemuResizeRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuSendkeyByNodeAndVmid' {
        It 'Test Set-PVENodesQemuSendkeyByNodeAndVmid' {
            #$TestResult = Set-PVENodesQemuSendkeyByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesQemuSendkeyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuSnapshotConfigByNodeAndVmidAndSnapname' {
        It 'Test Set-PVENodesQemuSnapshotConfigByNodeAndVmidAndSnapname' {
            #$TestResult = Set-PVENodesQemuSnapshotConfigByNodeAndVmidAndSnapname -Node "TEST_VALUE" -Snapname "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesQemuSnapshotConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuUnlinkByNodeAndVmid' {
        It 'Test Set-PVENodesQemuUnlinkByNodeAndVmid' {
            #$TestResult = Set-PVENodesQemuUnlinkByNodeAndVmid -Node "TEST_VALUE" -Vmid "TEST_VALUE" -PUTNodesQemuUnlinkRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesStorageContentByNodeAndStorageAndVolume' {
        It 'Test Set-PVENodesStorageContentByNodeAndStorageAndVolume' {
            #$TestResult = Set-PVENodesStorageContentByNodeAndStorageAndVolume -Node "TEST_VALUE" -Storage "TEST_VALUE" -Volume "TEST_VALUE" -PUTNodesStorageContentRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesSubscriptionByNode' {
        It 'Test Set-PVENodesSubscriptionByNode' {
            #$TestResult = Set-PVENodesSubscriptionByNode -Node "TEST_VALUE" -PUTNodesSubscriptionRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesTimeByNode' {
        It 'Test Set-PVENodesTimeByNode' {
            #$TestResult = Set-PVENodesTimeByNode -Node "TEST_VALUE" -PUTNodesTimeRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}

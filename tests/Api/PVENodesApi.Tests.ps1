#
# Proxmox VE Module 1.0
# Generated OpenApiDescription to render Modules via OpenapiGenerator
# Version: 0.1
# Contact: 
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'ProxmoxPVE' -name 'PVEPVENodesApi' {
    Context 'Get-PVENodes' {
        It 'Test Get-PVENodes' {
            #$TestResult = Get-PVENodes
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesAplinfoByNode' {
        It 'Test Get-PVENodesAplinfoByNode' {
            #$TestResult = Get-PVENodesAplinfoByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesAptByNode' {
        It 'Test Get-PVENodesAptByNode' {
            #$TestResult = Get-PVENodesAptByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesAptChangelogByNode' {
        It 'Test Get-PVENodesAptChangelogByNode' {
            #$TestResult = Get-PVENodesAptChangelogByNode -GETNodesAptChangelogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesAptRepositoriesByNode' {
        It 'Test Get-PVENodesAptRepositoriesByNode' {
            #$TestResult = Get-PVENodesAptRepositoriesByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesAptUpdateByNode' {
        It 'Test Get-PVENodesAptUpdateByNode' {
            #$TestResult = Get-PVENodesAptUpdateByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesAptVersionsByNode' {
        It 'Test Get-PVENodesAptVersionsByNode' {
            #$TestResult = Get-PVENodesAptVersionsByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesByNode' {
        It 'Test Get-PVENodesByNode' {
            #$TestResult = Get-PVENodesByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCapabilitiesByNode' {
        It 'Test Get-PVENodesCapabilitiesByNode' {
            #$TestResult = Get-PVENodesCapabilitiesByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCapabilitiesQemuByNode' {
        It 'Test Get-PVENodesCapabilitiesQemuByNode' {
            #$TestResult = Get-PVENodesCapabilitiesQemuByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCapabilitiesQemuCpuByNode' {
        It 'Test Get-PVENodesCapabilitiesQemuCpuByNode' {
            #$TestResult = Get-PVENodesCapabilitiesQemuCpuByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCapabilitiesQemuMachinesByNode' {
        It 'Test Get-PVENodesCapabilitiesQemuMachinesByNode' {
            #$TestResult = Get-PVENodesCapabilitiesQemuMachinesByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephByNode' {
        It 'Test Get-PVENodesCephByNode' {
            #$TestResult = Get-PVENodesCephByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephCfgByNode' {
        It 'Test Get-PVENodesCephCfgByNode' {
            #$TestResult = Get-PVENodesCephCfgByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephCfgDbByNode' {
        It 'Test Get-PVENodesCephCfgDbByNode' {
            #$TestResult = Get-PVENodesCephCfgDbByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephCfgRawByNode' {
        It 'Test Get-PVENodesCephCfgRawByNode' {
            #$TestResult = Get-PVENodesCephCfgRawByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephCfgValueByNode' {
        It 'Test Get-PVENodesCephCfgValueByNode' {
            #$TestResult = Get-PVENodesCephCfgValueByNode -GETNodesCephCfgValueRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephCmdsafetyByNode' {
        It 'Test Get-PVENodesCephCmdsafetyByNode' {
            #$TestResult = Get-PVENodesCephCmdsafetyByNode -GETNodesCephCmdsafetyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephCrushByNode' {
        It 'Test Get-PVENodesCephCrushByNode' {
            #$TestResult = Get-PVENodesCephCrushByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephFsByNode' {
        It 'Test Get-PVENodesCephFsByNode' {
            #$TestResult = Get-PVENodesCephFsByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephLogByNode' {
        It 'Test Get-PVENodesCephLogByNode' {
            #$TestResult = Get-PVENodesCephLogByNode -GETNodesCephLogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephMdsByNode' {
        It 'Test Get-PVENodesCephMdsByNode' {
            #$TestResult = Get-PVENodesCephMdsByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephMgrByNode' {
        It 'Test Get-PVENodesCephMgrByNode' {
            #$TestResult = Get-PVENodesCephMgrByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephMonByNode' {
        It 'Test Get-PVENodesCephMonByNode' {
            #$TestResult = Get-PVENodesCephMonByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephOsdByNode' {
        It 'Test Get-PVENodesCephOsdByNode' {
            #$TestResult = Get-PVENodesCephOsdByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephOsdByNodeAndOsdid' {
        It 'Test Get-PVENodesCephOsdByNodeAndOsdid' {
            #$TestResult = Get-PVENodesCephOsdByNodeAndOsdid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephOsdLvinfoByNodeAndOsdid' {
        It 'Test Get-PVENodesCephOsdLvinfoByNodeAndOsdid' {
            #$TestResult = Get-PVENodesCephOsdLvinfoByNodeAndOsdid -GETNodesCephOsdLvinfoRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephOsdMetadataByNodeAndOsdid' {
        It 'Test Get-PVENodesCephOsdMetadataByNodeAndOsdid' {
            #$TestResult = Get-PVENodesCephOsdMetadataByNodeAndOsdid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephPoolByNode' {
        It 'Test Get-PVENodesCephPoolByNode' {
            #$TestResult = Get-PVENodesCephPoolByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephPoolByNodeAndName' {
        It 'Test Get-PVENodesCephPoolByNodeAndName' {
            #$TestResult = Get-PVENodesCephPoolByNodeAndName
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephPoolStatusByNodeAndName' {
        It 'Test Get-PVENodesCephPoolStatusByNodeAndName' {
            #$TestResult = Get-PVENodesCephPoolStatusByNodeAndName -GETNodesCephPoolStatusRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephRulesByNode' {
        It 'Test Get-PVENodesCephRulesByNode' {
            #$TestResult = Get-PVENodesCephRulesByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCephStatusByNode' {
        It 'Test Get-PVENodesCephStatusByNode' {
            #$TestResult = Get-PVENodesCephStatusByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCertificatesAcmeByNode' {
        It 'Test Get-PVENodesCertificatesAcmeByNode' {
            #$TestResult = Get-PVENodesCertificatesAcmeByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCertificatesByNode' {
        It 'Test Get-PVENodesCertificatesByNode' {
            #$TestResult = Get-PVENodesCertificatesByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesCertificatesInfoByNode' {
        It 'Test Get-PVENodesCertificatesInfoByNode' {
            #$TestResult = Get-PVENodesCertificatesInfoByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesConfigByNode' {
        It 'Test Get-PVENodesConfigByNode' {
            #$TestResult = Get-PVENodesConfigByNode -GETNodesConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksByNode' {
        It 'Test Get-PVENodesDisksByNode' {
            #$TestResult = Get-PVENodesDisksByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksDirectoryByNode' {
        It 'Test Get-PVENodesDisksDirectoryByNode' {
            #$TestResult = Get-PVENodesDisksDirectoryByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksListByNode' {
        It 'Test Get-PVENodesDisksListByNode' {
            #$TestResult = Get-PVENodesDisksListByNode -GETNodesDisksListRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksLvmByNode' {
        It 'Test Get-PVENodesDisksLvmByNode' {
            #$TestResult = Get-PVENodesDisksLvmByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksLvmthinByNode' {
        It 'Test Get-PVENodesDisksLvmthinByNode' {
            #$TestResult = Get-PVENodesDisksLvmthinByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksSmartByNode' {
        It 'Test Get-PVENodesDisksSmartByNode' {
            #$TestResult = Get-PVENodesDisksSmartByNode -GETNodesDisksSmartRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksZfsByNode' {
        It 'Test Get-PVENodesDisksZfsByNode' {
            #$TestResult = Get-PVENodesDisksZfsByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDisksZfsByNodeAndName' {
        It 'Test Get-PVENodesDisksZfsByNodeAndName' {
            #$TestResult = Get-PVENodesDisksZfsByNodeAndName
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesDnsByNode' {
        It 'Test Get-PVENodesDnsByNode' {
            #$TestResult = Get-PVENodesDnsByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesFirewallByNode' {
        It 'Test Get-PVENodesFirewallByNode' {
            #$TestResult = Get-PVENodesFirewallByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesFirewallLogByNode' {
        It 'Test Get-PVENodesFirewallLogByNode' {
            #$TestResult = Get-PVENodesFirewallLogByNode -GETNodesFirewallLogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesFirewallOptionsByNode' {
        It 'Test Get-PVENodesFirewallOptionsByNode' {
            #$TestResult = Get-PVENodesFirewallOptionsByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesFirewallRulesByNode' {
        It 'Test Get-PVENodesFirewallRulesByNode' {
            #$TestResult = Get-PVENodesFirewallRulesByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesFirewallRulesByNodeAndPos' {
        It 'Test Get-PVENodesFirewallRulesByNodeAndPos' {
            #$TestResult = Get-PVENodesFirewallRulesByNodeAndPos
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesHardwareByNode' {
        It 'Test Get-PVENodesHardwareByNode' {
            #$TestResult = Get-PVENodesHardwareByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesHardwarePciByNode' {
        It 'Test Get-PVENodesHardwarePciByNode' {
            #$TestResult = Get-PVENodesHardwarePciByNode -GETNodesHardwarePciRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesHardwarePciByNodeAndPciidormapping' {
        It 'Test Get-PVENodesHardwarePciByNodeAndPciidormapping' {
            #$TestResult = Get-PVENodesHardwarePciByNodeAndPciidormapping
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesHardwarePciMdevByNodeAndPciidormapping' {
        It 'Test Get-PVENodesHardwarePciMdevByNodeAndPciidormapping' {
            #$TestResult = Get-PVENodesHardwarePciMdevByNodeAndPciidormapping
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesHardwareUsbByNode' {
        It 'Test Get-PVENodesHardwareUsbByNode' {
            #$TestResult = Get-PVENodesHardwareUsbByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesHostsByNode' {
        It 'Test Get-PVENodesHostsByNode' {
            #$TestResult = Get-PVENodesHostsByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesJournalByNode' {
        It 'Test Get-PVENodesJournalByNode' {
            #$TestResult = Get-PVENodesJournalByNode -GETNodesJournalRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcByNode' {
        It 'Test Get-PVENodesLxcByNode' {
            #$TestResult = Get-PVENodesLxcByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcByNodeAndVmid' {
        It 'Test Get-PVENodesLxcByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcConfigByNodeAndVmid' {
        It 'Test Get-PVENodesLxcConfigByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcConfigByNodeAndVmid -GETNodesLxcConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFeatureByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFeatureByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFeatureByNodeAndVmid -GETNodesLxcFeatureRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallAliasesByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallAliasesByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallAliasesByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallAliasesByNodeAndVmidAndName' {
        It 'Test Get-PVENodesLxcFirewallAliasesByNodeAndVmidAndName' {
            #$TestResult = Get-PVENodesLxcFirewallAliasesByNodeAndVmidAndName
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallIpsetByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallIpsetByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallIpsetByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallIpsetByNodeAndVmidAndName' {
        It 'Test Get-PVENodesLxcFirewallIpsetByNodeAndVmidAndName' {
            #$TestResult = Get-PVENodesLxcFirewallIpsetByNodeAndVmidAndName
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr' {
        It 'Test Get-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr' {
            #$TestResult = Get-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallLogByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallLogByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallLogByNodeAndVmid -GETNodesLxcFirewallLogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallOptionsByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallOptionsByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallOptionsByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallRefsByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallRefsByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallRefsByNodeAndVmid -GETNodesLxcFirewallRefsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallRulesByNodeAndVmid' {
        It 'Test Get-PVENodesLxcFirewallRulesByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcFirewallRulesByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcFirewallRulesByNodeAndVmidAndPos' {
        It 'Test Get-PVENodesLxcFirewallRulesByNodeAndVmidAndPos' {
            #$TestResult = Get-PVENodesLxcFirewallRulesByNodeAndVmidAndPos
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcInterfacesByNodeAndVmid' {
        It 'Test Get-PVENodesLxcInterfacesByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcInterfacesByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcMtunnelwebsocketByNodeAndVmid' {
        It 'Test Get-PVENodesLxcMtunnelwebsocketByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcMtunnelwebsocketByNodeAndVmid -GETNodesLxcMtunnelwebsocketRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcPendingByNodeAndVmid' {
        It 'Test Get-PVENodesLxcPendingByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcPendingByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcRrdByNodeAndVmid' {
        It 'Test Get-PVENodesLxcRrdByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcRrdByNodeAndVmid -GETNodesLxcRrdRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcRrddataByNodeAndVmid' {
        It 'Test Get-PVENodesLxcRrddataByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcRrddataByNodeAndVmid -GETNodesLxcRrddataRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcSnapshotByNodeAndVmid' {
        It 'Test Get-PVENodesLxcSnapshotByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcSnapshotByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcSnapshotByNodeAndVmidAndSnapname' {
        It 'Test Get-PVENodesLxcSnapshotByNodeAndVmidAndSnapname' {
            #$TestResult = Get-PVENodesLxcSnapshotByNodeAndVmidAndSnapname
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcSnapshotConfigByNodeAndVmidAndSnapname' {
        It 'Test Get-PVENodesLxcSnapshotConfigByNodeAndVmidAndSnapname' {
            #$TestResult = Get-PVENodesLxcSnapshotConfigByNodeAndVmidAndSnapname
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcStatusByNodeAndVmid' {
        It 'Test Get-PVENodesLxcStatusByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcStatusByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcStatusCurrentByNodeAndVmid' {
        It 'Test Get-PVENodesLxcStatusCurrentByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcStatusCurrentByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesLxcVncwebsocketByNodeAndVmid' {
        It 'Test Get-PVENodesLxcVncwebsocketByNodeAndVmid' {
            #$TestResult = Get-PVENodesLxcVncwebsocketByNodeAndVmid -GETNodesLxcVncwebsocketRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesNetstatByNode' {
        It 'Test Get-PVENodesNetstatByNode' {
            #$TestResult = Get-PVENodesNetstatByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesNetworkByNode' {
        It 'Test Get-PVENodesNetworkByNode' {
            #$TestResult = Get-PVENodesNetworkByNode -GETNodesNetworkRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesNetworkByNodeAndIface' {
        It 'Test Get-PVENodesNetworkByNodeAndIface' {
            #$TestResult = Get-PVENodesNetworkByNodeAndIface
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentExecstatusByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentExecstatusByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentExecstatusByNodeAndVmid -GETNodesQemuAgentExecstatusRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentFilereadByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentFilereadByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentFilereadByNodeAndVmid -GETNodesQemuAgentFilereadRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGetfsinfoByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGetfsinfoByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGetfsinfoByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGethostnameByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGethostnameByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGethostnameByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGetmemoryblockinfoByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGetmemoryblockinfoByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGetmemoryblockinfoByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGetmemoryblocksByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGetmemoryblocksByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGetmemoryblocksByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGetosinfoByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGetosinfoByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGetosinfoByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGettimeByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGettimeByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGettimeByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGettimezoneByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGettimezoneByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGettimezoneByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGetusersByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGetusersByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGetusersByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentGetvcpusByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentGetvcpusByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentGetvcpusByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentInfoByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentInfoByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentInfoByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuAgentNetworkgetinterfacesByNodeAndVmid' {
        It 'Test Get-PVENodesQemuAgentNetworkgetinterfacesByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuAgentNetworkgetinterfacesByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuByNode' {
        It 'Test Get-PVENodesQemuByNode' {
            #$TestResult = Get-PVENodesQemuByNode -GETNodesQemuRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuByNodeAndVmid' {
        It 'Test Get-PVENodesQemuByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuCloudinitByNodeAndVmid' {
        It 'Test Get-PVENodesQemuCloudinitByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuCloudinitByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuCloudinitDumpByNodeAndVmid' {
        It 'Test Get-PVENodesQemuCloudinitDumpByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuCloudinitDumpByNodeAndVmid -GETNodesQemuCloudinitDumpRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuConfigByNodeAndVmid' {
        It 'Test Get-PVENodesQemuConfigByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuConfigByNodeAndVmid -GETNodesQemuConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFeatureByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFeatureByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFeatureByNodeAndVmid -GETNodesQemuFeatureRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallAliasesByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallAliasesByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallAliasesByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallAliasesByNodeAndVmidAndName' {
        It 'Test Get-PVENodesQemuFirewallAliasesByNodeAndVmidAndName' {
            #$TestResult = Get-PVENodesQemuFirewallAliasesByNodeAndVmidAndName
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallIpsetByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallIpsetByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallIpsetByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallIpsetByNodeAndVmidAndName' {
        It 'Test Get-PVENodesQemuFirewallIpsetByNodeAndVmidAndName' {
            #$TestResult = Get-PVENodesQemuFirewallIpsetByNodeAndVmidAndName
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr' {
        It 'Test Get-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr' {
            #$TestResult = Get-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallLogByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallLogByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallLogByNodeAndVmid -GETNodesQemuFirewallLogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallOptionsByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallOptionsByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallOptionsByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallRefsByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallRefsByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallRefsByNodeAndVmid -GETNodesQemuFirewallRefsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallRulesByNodeAndVmid' {
        It 'Test Get-PVENodesQemuFirewallRulesByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuFirewallRulesByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuFirewallRulesByNodeAndVmidAndPos' {
        It 'Test Get-PVENodesQemuFirewallRulesByNodeAndVmidAndPos' {
            #$TestResult = Get-PVENodesQemuFirewallRulesByNodeAndVmidAndPos
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuMigrateByNodeAndVmid' {
        It 'Test Get-PVENodesQemuMigrateByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuMigrateByNodeAndVmid -GETNodesQemuMigrateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuMtunnelwebsocketByNodeAndVmid' {
        It 'Test Get-PVENodesQemuMtunnelwebsocketByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuMtunnelwebsocketByNodeAndVmid -GETNodesQemuMtunnelwebsocketRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuPendingByNodeAndVmid' {
        It 'Test Get-PVENodesQemuPendingByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuPendingByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuRrdByNodeAndVmid' {
        It 'Test Get-PVENodesQemuRrdByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuRrdByNodeAndVmid -GETNodesQemuRrdRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuRrddataByNodeAndVmid' {
        It 'Test Get-PVENodesQemuRrddataByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuRrddataByNodeAndVmid -GETNodesQemuRrddataRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuSnapshotByNodeAndVmid' {
        It 'Test Get-PVENodesQemuSnapshotByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuSnapshotByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuSnapshotByNodeAndVmidAndSnapname' {
        It 'Test Get-PVENodesQemuSnapshotByNodeAndVmidAndSnapname' {
            #$TestResult = Get-PVENodesQemuSnapshotByNodeAndVmidAndSnapname
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuSnapshotConfigByNodeAndVmidAndSnapname' {
        It 'Test Get-PVENodesQemuSnapshotConfigByNodeAndVmidAndSnapname' {
            #$TestResult = Get-PVENodesQemuSnapshotConfigByNodeAndVmidAndSnapname
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuStatusByNodeAndVmid' {
        It 'Test Get-PVENodesQemuStatusByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuStatusByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuStatusCurrentByNodeAndVmid' {
        It 'Test Get-PVENodesQemuStatusCurrentByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuStatusCurrentByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQemuVncwebsocketByNodeAndVmid' {
        It 'Test Get-PVENodesQemuVncwebsocketByNodeAndVmid' {
            #$TestResult = Get-PVENodesQemuVncwebsocketByNodeAndVmid -GETNodesQemuVncwebsocketRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesQueryurlmetadataByNode' {
        It 'Test Get-PVENodesQueryurlmetadataByNode' {
            #$TestResult = Get-PVENodesQueryurlmetadataByNode -GETNodesQueryurlmetadataRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesReplicationByNode' {
        It 'Test Get-PVENodesReplicationByNode' {
            #$TestResult = Get-PVENodesReplicationByNode -GETNodesReplicationRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesReplicationByNodeAndId' {
        It 'Test Get-PVENodesReplicationByNodeAndId' {
            #$TestResult = Get-PVENodesReplicationByNodeAndId
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesReplicationLogByNodeAndId' {
        It 'Test Get-PVENodesReplicationLogByNodeAndId' {
            #$TestResult = Get-PVENodesReplicationLogByNodeAndId -GETNodesReplicationLogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesReplicationStatusByNodeAndId' {
        It 'Test Get-PVENodesReplicationStatusByNodeAndId' {
            #$TestResult = Get-PVENodesReplicationStatusByNodeAndId
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesReportByNode' {
        It 'Test Get-PVENodesReportByNode' {
            #$TestResult = Get-PVENodesReportByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesRrdByNode' {
        It 'Test Get-PVENodesRrdByNode' {
            #$TestResult = Get-PVENodesRrdByNode -GETNodesRrdRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesRrddataByNode' {
        It 'Test Get-PVENodesRrddataByNode' {
            #$TestResult = Get-PVENodesRrddataByNode -GETNodesRrddataRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanByNode' {
        It 'Test Get-PVENodesScanByNode' {
            #$TestResult = Get-PVENodesScanByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanCifsByNode' {
        It 'Test Get-PVENodesScanCifsByNode' {
            #$TestResult = Get-PVENodesScanCifsByNode -GETNodesScanCifsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanGlusterfsByNode' {
        It 'Test Get-PVENodesScanGlusterfsByNode' {
            #$TestResult = Get-PVENodesScanGlusterfsByNode -GETNodesScanGlusterfsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanIscsiByNode' {
        It 'Test Get-PVENodesScanIscsiByNode' {
            #$TestResult = Get-PVENodesScanIscsiByNode -GETNodesScanIscsiRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanLvmByNode' {
        It 'Test Get-PVENodesScanLvmByNode' {
            #$TestResult = Get-PVENodesScanLvmByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanLvmthinByNode' {
        It 'Test Get-PVENodesScanLvmthinByNode' {
            #$TestResult = Get-PVENodesScanLvmthinByNode -GETNodesScanLvmthinRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanNfsByNode' {
        It 'Test Get-PVENodesScanNfsByNode' {
            #$TestResult = Get-PVENodesScanNfsByNode -GETNodesScanNfsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanPbsByNode' {
        It 'Test Get-PVENodesScanPbsByNode' {
            #$TestResult = Get-PVENodesScanPbsByNode -GETNodesScanPbsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesScanZfsByNode' {
        It 'Test Get-PVENodesScanZfsByNode' {
            #$TestResult = Get-PVENodesScanZfsByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesSdnByNode' {
        It 'Test Get-PVENodesSdnByNode' {
            #$TestResult = Get-PVENodesSdnByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesSdnZonesByNode' {
        It 'Test Get-PVENodesSdnZonesByNode' {
            #$TestResult = Get-PVENodesSdnZonesByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesSdnZonesByNodeAndZone' {
        It 'Test Get-PVENodesSdnZonesByNodeAndZone' {
            #$TestResult = Get-PVENodesSdnZonesByNodeAndZone
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesSdnZonesContentByNodeAndZone' {
        It 'Test Get-PVENodesSdnZonesContentByNodeAndZone' {
            #$TestResult = Get-PVENodesSdnZonesContentByNodeAndZone
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesServicesByNode' {
        It 'Test Get-PVENodesServicesByNode' {
            #$TestResult = Get-PVENodesServicesByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesServicesByNodeAndService' {
        It 'Test Get-PVENodesServicesByNodeAndService' {
            #$TestResult = Get-PVENodesServicesByNodeAndService
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesServicesStateByNodeAndService' {
        It 'Test Get-PVENodesServicesStateByNodeAndService' {
            #$TestResult = Get-PVENodesServicesStateByNodeAndService
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStatusByNode' {
        It 'Test Get-PVENodesStatusByNode' {
            #$TestResult = Get-PVENodesStatusByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageByNode' {
        It 'Test Get-PVENodesStorageByNode' {
            #$TestResult = Get-PVENodesStorageByNode -GETNodesStorageRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageByNodeAndStorage' {
        It 'Test Get-PVENodesStorageByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageByNodeAndStorage
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageContentByNodeAndStorage' {
        It 'Test Get-PVENodesStorageContentByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageContentByNodeAndStorage -GETNodesStorageContentRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageContentByNodeAndStorageAndVolume' {
        It 'Test Get-PVENodesStorageContentByNodeAndStorageAndVolume' {
            #$TestResult = Get-PVENodesStorageContentByNodeAndStorageAndVolume
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageFilerestoreDownloadByNodeAndStorage' {
        It 'Test Get-PVENodesStorageFilerestoreDownloadByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageFilerestoreDownloadByNodeAndStorage -GETNodesStorageFilerestoreDownloadRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageFilerestoreListByNodeAndStorage' {
        It 'Test Get-PVENodesStorageFilerestoreListByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageFilerestoreListByNodeAndStorage -GETNodesStorageFilerestoreListRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageImportmetadataByNodeAndStorage' {
        It 'Test Get-PVENodesStorageImportmetadataByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageImportmetadataByNodeAndStorage -GETNodesStorageImportmetadataRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStoragePrunebackupsByNodeAndStorage' {
        It 'Test Get-PVENodesStoragePrunebackupsByNodeAndStorage' {
            #$TestResult = Get-PVENodesStoragePrunebackupsByNodeAndStorage -GETNodesStoragePrunebackupsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageRrdByNodeAndStorage' {
        It 'Test Get-PVENodesStorageRrdByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageRrdByNodeAndStorage -GETNodesStorageRrdRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageRrddataByNodeAndStorage' {
        It 'Test Get-PVENodesStorageRrddataByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageRrddataByNodeAndStorage -GETNodesStorageRrddataRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesStorageStatusByNodeAndStorage' {
        It 'Test Get-PVENodesStorageStatusByNodeAndStorage' {
            #$TestResult = Get-PVENodesStorageStatusByNodeAndStorage
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesSubscriptionByNode' {
        It 'Test Get-PVENodesSubscriptionByNode' {
            #$TestResult = Get-PVENodesSubscriptionByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesSyslogByNode' {
        It 'Test Get-PVENodesSyslogByNode' {
            #$TestResult = Get-PVENodesSyslogByNode -GETNodesSyslogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesTasksByNode' {
        It 'Test Get-PVENodesTasksByNode' {
            #$TestResult = Get-PVENodesTasksByNode -GETNodesTasksRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesTasksByNodeAndUpid' {
        It 'Test Get-PVENodesTasksByNodeAndUpid' {
            #$TestResult = Get-PVENodesTasksByNodeAndUpid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesTasksLogByNodeAndUpid' {
        It 'Test Get-PVENodesTasksLogByNodeAndUpid' {
            #$TestResult = Get-PVENodesTasksLogByNodeAndUpid -GETNodesTasksLogRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesTasksStatusByNodeAndUpid' {
        It 'Test Get-PVENodesTasksStatusByNodeAndUpid' {
            #$TestResult = Get-PVENodesTasksStatusByNodeAndUpid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesTimeByNode' {
        It 'Test Get-PVENodesTimeByNode' {
            #$TestResult = Get-PVENodesTimeByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesVersionByNode' {
        It 'Test Get-PVENodesVersionByNode' {
            #$TestResult = Get-PVENodesVersionByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesVncwebsocketByNode' {
        It 'Test Get-PVENodesVncwebsocketByNode' {
            #$TestResult = Get-PVENodesVncwebsocketByNode -GETNodesVncwebsocketRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesVzdumpDefaultsByNode' {
        It 'Test Get-PVENodesVzdumpDefaultsByNode' {
            #$TestResult = Get-PVENodesVzdumpDefaultsByNode -GETNodesVzdumpDefaultsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PVENodesVzdumpExtractconfigByNode' {
        It 'Test Get-PVENodesVzdumpExtractconfigByNode' {
            #$TestResult = Get-PVENodesVzdumpExtractconfigByNode -GETNodesVzdumpExtractconfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesAplinfoByNode' {
        It 'Test New-PVENodesAplinfoByNode' {
            #$TestResult = New-PVENodesAplinfoByNode -POSTNodesAplinfoRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesAptRepositoriesByNode' {
        It 'Test New-PVENodesAptRepositoriesByNode' {
            #$TestResult = New-PVENodesAptRepositoriesByNode -POSTNodesAptRepositoriesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesAptUpdateByNode' {
        It 'Test New-PVENodesAptUpdateByNode' {
            #$TestResult = New-PVENodesAptUpdateByNode -POSTNodesAptUpdateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephFsByNodeAndName' {
        It 'Test New-PVENodesCephFsByNodeAndName' {
            #$TestResult = New-PVENodesCephFsByNodeAndName -POSTNodesCephFsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephInitByNode' {
        It 'Test New-PVENodesCephInitByNode' {
            #$TestResult = New-PVENodesCephInitByNode -POSTNodesCephInitRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephMdsByNodeAndName' {
        It 'Test New-PVENodesCephMdsByNodeAndName' {
            #$TestResult = New-PVENodesCephMdsByNodeAndName -POSTNodesCephMdsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephMgrByNodeAndId' {
        It 'Test New-PVENodesCephMgrByNodeAndId' {
            #$TestResult = New-PVENodesCephMgrByNodeAndId
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephMonByNodeAndMonid' {
        It 'Test New-PVENodesCephMonByNodeAndMonid' {
            #$TestResult = New-PVENodesCephMonByNodeAndMonid -POSTNodesCephMonRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephOsdByNode' {
        It 'Test New-PVENodesCephOsdByNode' {
            #$TestResult = New-PVENodesCephOsdByNode -POSTNodesCephOsdRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephOsdInByNodeAndOsdid' {
        It 'Test New-PVENodesCephOsdInByNodeAndOsdid' {
            #$TestResult = New-PVENodesCephOsdInByNodeAndOsdid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephOsdOutByNodeAndOsdid' {
        It 'Test New-PVENodesCephOsdOutByNodeAndOsdid' {
            #$TestResult = New-PVENodesCephOsdOutByNodeAndOsdid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephOsdScrubByNodeAndOsdid' {
        It 'Test New-PVENodesCephOsdScrubByNodeAndOsdid' {
            #$TestResult = New-PVENodesCephOsdScrubByNodeAndOsdid -POSTNodesCephOsdScrubRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephPoolByNode' {
        It 'Test New-PVENodesCephPoolByNode' {
            #$TestResult = New-PVENodesCephPoolByNode -POSTNodesCephPoolRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephRestartByNode' {
        It 'Test New-PVENodesCephRestartByNode' {
            #$TestResult = New-PVENodesCephRestartByNode -POSTNodesCephRestartRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephStartByNode' {
        It 'Test New-PVENodesCephStartByNode' {
            #$TestResult = New-PVENodesCephStartByNode -POSTNodesCephStartRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCephStopByNode' {
        It 'Test New-PVENodesCephStopByNode' {
            #$TestResult = New-PVENodesCephStopByNode -POSTNodesCephStopRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCertificatesAcmeCertificateByNode' {
        It 'Test New-PVENodesCertificatesAcmeCertificateByNode' {
            #$TestResult = New-PVENodesCertificatesAcmeCertificateByNode -POSTNodesCertificatesAcmeCertificateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesCertificatesCustomByNode' {
        It 'Test New-PVENodesCertificatesCustomByNode' {
            #$TestResult = New-PVENodesCertificatesCustomByNode -POSTNodesCertificatesCustomRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesDisksDirectoryByNode' {
        It 'Test New-PVENodesDisksDirectoryByNode' {
            #$TestResult = New-PVENodesDisksDirectoryByNode -POSTNodesDisksDirectoryRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesDisksInitgptByNode' {
        It 'Test New-PVENodesDisksInitgptByNode' {
            #$TestResult = New-PVENodesDisksInitgptByNode -POSTNodesDisksInitgptRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesDisksLvmByNode' {
        It 'Test New-PVENodesDisksLvmByNode' {
            #$TestResult = New-PVENodesDisksLvmByNode -POSTNodesDisksLvmRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesDisksLvmthinByNode' {
        It 'Test New-PVENodesDisksLvmthinByNode' {
            #$TestResult = New-PVENodesDisksLvmthinByNode -POSTNodesDisksLvmthinRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesDisksZfsByNode' {
        It 'Test New-PVENodesDisksZfsByNode' {
            #$TestResult = New-PVENodesDisksZfsByNode -POSTNodesDisksZfsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesExecuteByNode' {
        It 'Test New-PVENodesExecuteByNode' {
            #$TestResult = New-PVENodesExecuteByNode -POSTNodesExecuteRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesFirewallRulesByNode' {
        It 'Test New-PVENodesFirewallRulesByNode' {
            #$TestResult = New-PVENodesFirewallRulesByNode -POSTNodesFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesHostsByNode' {
        It 'Test New-PVENodesHostsByNode' {
            #$TestResult = New-PVENodesHostsByNode -POSTNodesHostsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcByNode' {
        It 'Test New-PVENodesLxcByNode' {
            #$TestResult = New-PVENodesLxcByNode -POSTNodesLxcRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcCloneByNodeAndVmid' {
        It 'Test New-PVENodesLxcCloneByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcCloneByNodeAndVmid -POSTNodesLxcCloneRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcFirewallAliasesByNodeAndVmid' {
        It 'Test New-PVENodesLxcFirewallAliasesByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcFirewallAliasesByNodeAndVmid -POSTNodesLxcFirewallAliasesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcFirewallIpsetByNodeAndVmid' {
        It 'Test New-PVENodesLxcFirewallIpsetByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcFirewallIpsetByNodeAndVmid -POSTNodesLxcFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcFirewallIpsetByNodeAndVmidAndName' {
        It 'Test New-PVENodesLxcFirewallIpsetByNodeAndVmidAndName' {
            #$TestResult = New-PVENodesLxcFirewallIpsetByNodeAndVmidAndName -POSTNodesLxcFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcFirewallRulesByNodeAndVmid' {
        It 'Test New-PVENodesLxcFirewallRulesByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcFirewallRulesByNodeAndVmid -POSTNodesLxcFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcMigrateByNodeAndVmid' {
        It 'Test New-PVENodesLxcMigrateByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcMigrateByNodeAndVmid -POSTNodesLxcMigrateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcMovevolumeByNodeAndVmid' {
        It 'Test New-PVENodesLxcMovevolumeByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcMovevolumeByNodeAndVmid -POSTNodesLxcMovevolumeRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcMtunnelByNodeAndVmid' {
        It 'Test New-PVENodesLxcMtunnelByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcMtunnelByNodeAndVmid -POSTNodesLxcMtunnelRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcRemotemigrateByNodeAndVmid' {
        It 'Test New-PVENodesLxcRemotemigrateByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcRemotemigrateByNodeAndVmid -POSTNodesLxcRemotemigrateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcSnapshotByNodeAndVmid' {
        It 'Test New-PVENodesLxcSnapshotByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcSnapshotByNodeAndVmid -POSTNodesLxcSnapshotRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcSnapshotRollbackByNodeAndVmidAndSnapname' {
        It 'Test New-PVENodesLxcSnapshotRollbackByNodeAndVmidAndSnapname' {
            #$TestResult = New-PVENodesLxcSnapshotRollbackByNodeAndVmidAndSnapname -POSTNodesLxcSnapshotRollbackRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcSpiceproxyByNodeAndVmid' {
        It 'Test New-PVENodesLxcSpiceproxyByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcSpiceproxyByNodeAndVmid -POSTNodesLxcSpiceproxyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcStatusRebootByNodeAndVmid' {
        It 'Test New-PVENodesLxcStatusRebootByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcStatusRebootByNodeAndVmid -POSTNodesLxcStatusRebootRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcStatusResumeByNodeAndVmid' {
        It 'Test New-PVENodesLxcStatusResumeByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcStatusResumeByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcStatusShutdownByNodeAndVmid' {
        It 'Test New-PVENodesLxcStatusShutdownByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcStatusShutdownByNodeAndVmid -POSTNodesLxcStatusShutdownRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcStatusStartByNodeAndVmid' {
        It 'Test New-PVENodesLxcStatusStartByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcStatusStartByNodeAndVmid -POSTNodesLxcStatusStartRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcStatusStopByNodeAndVmid' {
        It 'Test New-PVENodesLxcStatusStopByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcStatusStopByNodeAndVmid -POSTNodesLxcStatusStopRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcStatusSuspendByNodeAndVmid' {
        It 'Test New-PVENodesLxcStatusSuspendByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcStatusSuspendByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcTemplateByNodeAndVmid' {
        It 'Test New-PVENodesLxcTemplateByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcTemplateByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcTermproxyByNodeAndVmid' {
        It 'Test New-PVENodesLxcTermproxyByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcTermproxyByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesLxcVncproxyByNodeAndVmid' {
        It 'Test New-PVENodesLxcVncproxyByNodeAndVmid' {
            #$TestResult = New-PVENodesLxcVncproxyByNodeAndVmid -POSTNodesLxcVncproxyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesMigrateallByNode' {
        It 'Test New-PVENodesMigrateallByNode' {
            #$TestResult = New-PVENodesMigrateallByNode -POSTNodesMigrateallRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesNetworkByNode' {
        It 'Test New-PVENodesNetworkByNode' {
            #$TestResult = New-PVENodesNetworkByNode -POSTNodesNetworkRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentByNodeAndVmid -POSTNodesQemuAgentRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentExecByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentExecByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentExecByNodeAndVmid -POSTNodesQemuAgentExecRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentFilewriteByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentFilewriteByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentFilewriteByNodeAndVmid -POSTNodesQemuAgentFilewriteRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentFsfreezefreezeByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentFsfreezefreezeByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentFsfreezefreezeByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentFsfreezestatusByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentFsfreezestatusByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentFsfreezestatusByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentFsfreezethawByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentFsfreezethawByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentFsfreezethawByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentFstrimByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentFstrimByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentFstrimByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentPingByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentPingByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentPingByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentSetuserpasswordByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentSetuserpasswordByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentSetuserpasswordByNodeAndVmid -POSTNodesQemuAgentSetuserpasswordRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentShutdownByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentShutdownByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentShutdownByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentSuspenddiskByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentSuspenddiskByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentSuspenddiskByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentSuspendhybridByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentSuspendhybridByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentSuspendhybridByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuAgentSuspendramByNodeAndVmid' {
        It 'Test New-PVENodesQemuAgentSuspendramByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuAgentSuspendramByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuByNode' {
        It 'Test New-PVENodesQemuByNode' {
            #$TestResult = New-PVENodesQemuByNode -POSTNodesQemuRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuCloneByNodeAndVmid' {
        It 'Test New-PVENodesQemuCloneByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuCloneByNodeAndVmid -POSTNodesQemuCloneRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuConfigByNodeAndVmid' {
        It 'Test New-PVENodesQemuConfigByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuConfigByNodeAndVmid -POSTNodesQemuConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuFirewallAliasesByNodeAndVmid' {
        It 'Test New-PVENodesQemuFirewallAliasesByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuFirewallAliasesByNodeAndVmid -POSTNodesQemuFirewallAliasesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuFirewallIpsetByNodeAndVmid' {
        It 'Test New-PVENodesQemuFirewallIpsetByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuFirewallIpsetByNodeAndVmid -POSTNodesQemuFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuFirewallIpsetByNodeAndVmidAndName' {
        It 'Test New-PVENodesQemuFirewallIpsetByNodeAndVmidAndName' {
            #$TestResult = New-PVENodesQemuFirewallIpsetByNodeAndVmidAndName -POSTNodesQemuFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuFirewallRulesByNodeAndVmid' {
        It 'Test New-PVENodesQemuFirewallRulesByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuFirewallRulesByNodeAndVmid -POSTNodesQemuFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuMigrateByNodeAndVmid' {
        It 'Test New-PVENodesQemuMigrateByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuMigrateByNodeAndVmid -POSTNodesQemuMigrateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuMonitorByNodeAndVmid' {
        It 'Test New-PVENodesQemuMonitorByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuMonitorByNodeAndVmid -POSTNodesQemuMonitorRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuMovediskByNodeAndVmid' {
        It 'Test New-PVENodesQemuMovediskByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuMovediskByNodeAndVmid -POSTNodesQemuMovediskRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuMtunnelByNodeAndVmid' {
        It 'Test New-PVENodesQemuMtunnelByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuMtunnelByNodeAndVmid -POSTNodesQemuMtunnelRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuRemotemigrateByNodeAndVmid' {
        It 'Test New-PVENodesQemuRemotemigrateByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuRemotemigrateByNodeAndVmid -POSTNodesQemuRemotemigrateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuSnapshotByNodeAndVmid' {
        It 'Test New-PVENodesQemuSnapshotByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuSnapshotByNodeAndVmid -POSTNodesQemuSnapshotRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuSnapshotRollbackByNodeAndVmidAndSnapname' {
        It 'Test New-PVENodesQemuSnapshotRollbackByNodeAndVmidAndSnapname' {
            #$TestResult = New-PVENodesQemuSnapshotRollbackByNodeAndVmidAndSnapname -POSTNodesQemuSnapshotRollbackRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuSpiceproxyByNodeAndVmid' {
        It 'Test New-PVENodesQemuSpiceproxyByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuSpiceproxyByNodeAndVmid -POSTNodesQemuSpiceproxyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusRebootByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusRebootByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusRebootByNodeAndVmid -POSTNodesQemuStatusRebootRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusResetByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusResetByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusResetByNodeAndVmid -POSTNodesQemuStatusResetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusResumeByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusResumeByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusResumeByNodeAndVmid -POSTNodesQemuStatusResumeRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusShutdownByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusShutdownByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusShutdownByNodeAndVmid -POSTNodesQemuStatusShutdownRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusStartByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusStartByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusStartByNodeAndVmid -POSTNodesQemuStatusStartRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusStopByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusStopByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusStopByNodeAndVmid -POSTNodesQemuStatusStopRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuStatusSuspendByNodeAndVmid' {
        It 'Test New-PVENodesQemuStatusSuspendByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuStatusSuspendByNodeAndVmid -POSTNodesQemuStatusSuspendRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuTemplateByNodeAndVmid' {
        It 'Test New-PVENodesQemuTemplateByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuTemplateByNodeAndVmid -POSTNodesQemuTemplateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuTermproxyByNodeAndVmid' {
        It 'Test New-PVENodesQemuTermproxyByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuTermproxyByNodeAndVmid -POSTNodesQemuTermproxyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesQemuVncproxyByNodeAndVmid' {
        It 'Test New-PVENodesQemuVncproxyByNodeAndVmid' {
            #$TestResult = New-PVENodesQemuVncproxyByNodeAndVmid -POSTNodesQemuVncproxyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesReplicationSchedulenowByNodeAndId' {
        It 'Test New-PVENodesReplicationSchedulenowByNodeAndId' {
            #$TestResult = New-PVENodesReplicationSchedulenowByNodeAndId
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesServicesReloadByNodeAndService' {
        It 'Test New-PVENodesServicesReloadByNodeAndService' {
            #$TestResult = New-PVENodesServicesReloadByNodeAndService
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesServicesRestartByNodeAndService' {
        It 'Test New-PVENodesServicesRestartByNodeAndService' {
            #$TestResult = New-PVENodesServicesRestartByNodeAndService
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesServicesStartByNodeAndService' {
        It 'Test New-PVENodesServicesStartByNodeAndService' {
            #$TestResult = New-PVENodesServicesStartByNodeAndService
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesServicesStopByNodeAndService' {
        It 'Test New-PVENodesServicesStopByNodeAndService' {
            #$TestResult = New-PVENodesServicesStopByNodeAndService
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesSpiceshellByNode' {
        It 'Test New-PVENodesSpiceshellByNode' {
            #$TestResult = New-PVENodesSpiceshellByNode -POSTNodesSpiceshellRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStartallByNode' {
        It 'Test New-PVENodesStartallByNode' {
            #$TestResult = New-PVENodesStartallByNode -POSTNodesStartallRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStatusByNode' {
        It 'Test New-PVENodesStatusByNode' {
            #$TestResult = New-PVENodesStatusByNode -POSTNodesStatusRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStopallByNode' {
        It 'Test New-PVENodesStopallByNode' {
            #$TestResult = New-PVENodesStopallByNode -POSTNodesStopallRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStorageContentByNodeAndStorage' {
        It 'Test New-PVENodesStorageContentByNodeAndStorage' {
            #$TestResult = New-PVENodesStorageContentByNodeAndStorage -POSTNodesStorageContentRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStorageContentByNodeAndStorageAndVolume' {
        It 'Test New-PVENodesStorageContentByNodeAndStorageAndVolume' {
            #$TestResult = New-PVENodesStorageContentByNodeAndStorageAndVolume -POSTNodesStorageContentRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStorageDownloadurlByNodeAndStorage' {
        It 'Test New-PVENodesStorageDownloadurlByNodeAndStorage' {
            #$TestResult = New-PVENodesStorageDownloadurlByNodeAndStorage -POSTNodesStorageDownloadurlRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesStorageUploadByNodeAndStorage' {
        It 'Test New-PVENodesStorageUploadByNodeAndStorage' {
            #$TestResult = New-PVENodesStorageUploadByNodeAndStorage -POSTNodesStorageUploadRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesSubscriptionByNode' {
        It 'Test New-PVENodesSubscriptionByNode' {
            #$TestResult = New-PVENodesSubscriptionByNode -POSTNodesSubscriptionRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesSuspendallByNode' {
        It 'Test New-PVENodesSuspendallByNode' {
            #$TestResult = New-PVENodesSuspendallByNode -POSTNodesSuspendallRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesTermproxyByNode' {
        It 'Test New-PVENodesTermproxyByNode' {
            #$TestResult = New-PVENodesTermproxyByNode -POSTNodesTermproxyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesVncshellByNode' {
        It 'Test New-PVENodesVncshellByNode' {
            #$TestResult = New-PVENodesVncshellByNode -POSTNodesVncshellRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesVzdumpByNode' {
        It 'Test New-PVENodesVzdumpByNode' {
            #$TestResult = New-PVENodesVzdumpByNode -POSTNodesVzdumpRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-PVENodesWakeonlanByNode' {
        It 'Test New-PVENodesWakeonlanByNode' {
            #$TestResult = New-PVENodesWakeonlanByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCephMdsByNodeAndName' {
        It 'Test Remove-PVENodesCephMdsByNodeAndName' {
            #$TestResult = Remove-PVENodesCephMdsByNodeAndName
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCephMgrByNodeAndId' {
        It 'Test Remove-PVENodesCephMgrByNodeAndId' {
            #$TestResult = Remove-PVENodesCephMgrByNodeAndId
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCephMonByNodeAndMonid' {
        It 'Test Remove-PVENodesCephMonByNodeAndMonid' {
            #$TestResult = Remove-PVENodesCephMonByNodeAndMonid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCephOsdByNodeAndOsdid' {
        It 'Test Remove-PVENodesCephOsdByNodeAndOsdid' {
            #$TestResult = Remove-PVENodesCephOsdByNodeAndOsdid -DELETENodesCephOsdRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCephPoolByNodeAndName' {
        It 'Test Remove-PVENodesCephPoolByNodeAndName' {
            #$TestResult = Remove-PVENodesCephPoolByNodeAndName -DELETENodesCephPoolRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCertificatesAcmeCertificateByNode' {
        It 'Test Remove-PVENodesCertificatesAcmeCertificateByNode' {
            #$TestResult = Remove-PVENodesCertificatesAcmeCertificateByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesCertificatesCustomByNode' {
        It 'Test Remove-PVENodesCertificatesCustomByNode' {
            #$TestResult = Remove-PVENodesCertificatesCustomByNode -DELETENodesCertificatesCustomRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesDisksDirectoryByNodeAndName' {
        It 'Test Remove-PVENodesDisksDirectoryByNodeAndName' {
            #$TestResult = Remove-PVENodesDisksDirectoryByNodeAndName -DELETENodesDisksDirectoryRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesDisksLvmByNodeAndName' {
        It 'Test Remove-PVENodesDisksLvmByNodeAndName' {
            #$TestResult = Remove-PVENodesDisksLvmByNodeAndName -DELETENodesDisksLvmRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesDisksLvmthinByNodeAndName' {
        It 'Test Remove-PVENodesDisksLvmthinByNodeAndName' {
            #$TestResult = Remove-PVENodesDisksLvmthinByNodeAndName -DELETENodesDisksLvmthinRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesDisksZfsByNodeAndName' {
        It 'Test Remove-PVENodesDisksZfsByNodeAndName' {
            #$TestResult = Remove-PVENodesDisksZfsByNodeAndName -DELETENodesDisksZfsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesFirewallRulesByNodeAndPos' {
        It 'Test Remove-PVENodesFirewallRulesByNodeAndPos' {
            #$TestResult = Remove-PVENodesFirewallRulesByNodeAndPos -DELETENodesFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesLxcByNodeAndVmid' {
        It 'Test Remove-PVENodesLxcByNodeAndVmid' {
            #$TestResult = Remove-PVENodesLxcByNodeAndVmid -DELETENodesLxcRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesLxcFirewallAliasesByNodeAndVmidAndName' {
        It 'Test Remove-PVENodesLxcFirewallAliasesByNodeAndVmidAndName' {
            #$TestResult = Remove-PVENodesLxcFirewallAliasesByNodeAndVmidAndName -DELETENodesLxcFirewallAliasesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesLxcFirewallIpsetByNodeAndVmidAndName' {
        It 'Test Remove-PVENodesLxcFirewallIpsetByNodeAndVmidAndName' {
            #$TestResult = Remove-PVENodesLxcFirewallIpsetByNodeAndVmidAndName -DELETENodesLxcFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr' {
        It 'Test Remove-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr' {
            #$TestResult = Remove-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr -DELETENodesLxcFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesLxcFirewallRulesByNodeAndVmidAndPos' {
        It 'Test Remove-PVENodesLxcFirewallRulesByNodeAndVmidAndPos' {
            #$TestResult = Remove-PVENodesLxcFirewallRulesByNodeAndVmidAndPos -DELETENodesLxcFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesLxcSnapshotByNodeAndVmidAndSnapname' {
        It 'Test Remove-PVENodesLxcSnapshotByNodeAndVmidAndSnapname' {
            #$TestResult = Remove-PVENodesLxcSnapshotByNodeAndVmidAndSnapname -DELETENodesLxcSnapshotRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesNetworkByNode' {
        It 'Test Remove-PVENodesNetworkByNode' {
            #$TestResult = Remove-PVENodesNetworkByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesNetworkByNodeAndIface' {
        It 'Test Remove-PVENodesNetworkByNodeAndIface' {
            #$TestResult = Remove-PVENodesNetworkByNodeAndIface
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesQemuByNodeAndVmid' {
        It 'Test Remove-PVENodesQemuByNodeAndVmid' {
            #$TestResult = Remove-PVENodesQemuByNodeAndVmid -DELETENodesQemuRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesQemuFirewallAliasesByNodeAndVmidAndName' {
        It 'Test Remove-PVENodesQemuFirewallAliasesByNodeAndVmidAndName' {
            #$TestResult = Remove-PVENodesQemuFirewallAliasesByNodeAndVmidAndName -DELETENodesQemuFirewallAliasesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesQemuFirewallIpsetByNodeAndVmidAndName' {
        It 'Test Remove-PVENodesQemuFirewallIpsetByNodeAndVmidAndName' {
            #$TestResult = Remove-PVENodesQemuFirewallIpsetByNodeAndVmidAndName -DELETENodesQemuFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr' {
        It 'Test Remove-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr' {
            #$TestResult = Remove-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr -DELETENodesQemuFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesQemuFirewallRulesByNodeAndVmidAndPos' {
        It 'Test Remove-PVENodesQemuFirewallRulesByNodeAndVmidAndPos' {
            #$TestResult = Remove-PVENodesQemuFirewallRulesByNodeAndVmidAndPos -DELETENodesQemuFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesQemuSnapshotByNodeAndVmidAndSnapname' {
        It 'Test Remove-PVENodesQemuSnapshotByNodeAndVmidAndSnapname' {
            #$TestResult = Remove-PVENodesQemuSnapshotByNodeAndVmidAndSnapname -DELETENodesQemuSnapshotRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesStorageContentByNodeAndStorageAndVolume' {
        It 'Test Remove-PVENodesStorageContentByNodeAndStorageAndVolume' {
            #$TestResult = Remove-PVENodesStorageContentByNodeAndStorageAndVolume -DELETENodesStorageContentRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesStoragePrunebackupsByNodeAndStorage' {
        It 'Test Remove-PVENodesStoragePrunebackupsByNodeAndStorage' {
            #$TestResult = Remove-PVENodesStoragePrunebackupsByNodeAndStorage -DELETENodesStoragePrunebackupsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesSubscriptionByNode' {
        It 'Test Remove-PVENodesSubscriptionByNode' {
            #$TestResult = Remove-PVENodesSubscriptionByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PVENodesTasksByNodeAndUpid' {
        It 'Test Remove-PVENodesTasksByNodeAndUpid' {
            #$TestResult = Remove-PVENodesTasksByNodeAndUpid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesAptRepositoriesByNode' {
        It 'Test Set-PVENodesAptRepositoriesByNode' {
            #$TestResult = Set-PVENodesAptRepositoriesByNode -PUTNodesAptRepositoriesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesCephPoolByNodeAndName' {
        It 'Test Set-PVENodesCephPoolByNodeAndName' {
            #$TestResult = Set-PVENodesCephPoolByNodeAndName -PUTNodesCephPoolRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesCertificatesAcmeCertificateByNode' {
        It 'Test Set-PVENodesCertificatesAcmeCertificateByNode' {
            #$TestResult = Set-PVENodesCertificatesAcmeCertificateByNode -PUTNodesCertificatesAcmeCertificateRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesConfigByNode' {
        It 'Test Set-PVENodesConfigByNode' {
            #$TestResult = Set-PVENodesConfigByNode -PUTNodesConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesDisksWipediskByNode' {
        It 'Test Set-PVENodesDisksWipediskByNode' {
            #$TestResult = Set-PVENodesDisksWipediskByNode -PUTNodesDisksWipediskRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesDnsByNode' {
        It 'Test Set-PVENodesDnsByNode' {
            #$TestResult = Set-PVENodesDnsByNode -PUTNodesDnsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesFirewallOptionsByNode' {
        It 'Test Set-PVENodesFirewallOptionsByNode' {
            #$TestResult = Set-PVENodesFirewallOptionsByNode -PUTNodesFirewallOptionsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesFirewallRulesByNodeAndPos' {
        It 'Test Set-PVENodesFirewallRulesByNodeAndPos' {
            #$TestResult = Set-PVENodesFirewallRulesByNodeAndPos -PUTNodesFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcConfigByNodeAndVmid' {
        It 'Test Set-PVENodesLxcConfigByNodeAndVmid' {
            #$TestResult = Set-PVENodesLxcConfigByNodeAndVmid -PUTNodesLxcConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcFirewallAliasesByNodeAndVmidAndName' {
        It 'Test Set-PVENodesLxcFirewallAliasesByNodeAndVmidAndName' {
            #$TestResult = Set-PVENodesLxcFirewallAliasesByNodeAndVmidAndName -PUTNodesLxcFirewallAliasesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr' {
        It 'Test Set-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr' {
            #$TestResult = Set-PVENodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr -PUTNodesLxcFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcFirewallOptionsByNodeAndVmid' {
        It 'Test Set-PVENodesLxcFirewallOptionsByNodeAndVmid' {
            #$TestResult = Set-PVENodesLxcFirewallOptionsByNodeAndVmid -PUTNodesLxcFirewallOptionsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcFirewallRulesByNodeAndVmidAndPos' {
        It 'Test Set-PVENodesLxcFirewallRulesByNodeAndVmidAndPos' {
            #$TestResult = Set-PVENodesLxcFirewallRulesByNodeAndVmidAndPos -PUTNodesLxcFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcResizeByNodeAndVmid' {
        It 'Test Set-PVENodesLxcResizeByNodeAndVmid' {
            #$TestResult = Set-PVENodesLxcResizeByNodeAndVmid -PUTNodesLxcResizeRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesLxcSnapshotConfigByNodeAndVmidAndSnapname' {
        It 'Test Set-PVENodesLxcSnapshotConfigByNodeAndVmidAndSnapname' {
            #$TestResult = Set-PVENodesLxcSnapshotConfigByNodeAndVmidAndSnapname -PUTNodesLxcSnapshotConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesNetworkByNode' {
        It 'Test Set-PVENodesNetworkByNode' {
            #$TestResult = Set-PVENodesNetworkByNode
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesNetworkByNodeAndIface' {
        It 'Test Set-PVENodesNetworkByNodeAndIface' {
            #$TestResult = Set-PVENodesNetworkByNodeAndIface -PUTNodesNetworkRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuCloudinitByNodeAndVmid' {
        It 'Test Set-PVENodesQemuCloudinitByNodeAndVmid' {
            #$TestResult = Set-PVENodesQemuCloudinitByNodeAndVmid
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuConfigByNodeAndVmid' {
        It 'Test Set-PVENodesQemuConfigByNodeAndVmid' {
            #$TestResult = Set-PVENodesQemuConfigByNodeAndVmid -PUTNodesQemuConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuFirewallAliasesByNodeAndVmidAndName' {
        It 'Test Set-PVENodesQemuFirewallAliasesByNodeAndVmidAndName' {
            #$TestResult = Set-PVENodesQemuFirewallAliasesByNodeAndVmidAndName -PUTNodesQemuFirewallAliasesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr' {
        It 'Test Set-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr' {
            #$TestResult = Set-PVENodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr -PUTNodesQemuFirewallIpsetRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuFirewallOptionsByNodeAndVmid' {
        It 'Test Set-PVENodesQemuFirewallOptionsByNodeAndVmid' {
            #$TestResult = Set-PVENodesQemuFirewallOptionsByNodeAndVmid -PUTNodesQemuFirewallOptionsRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuFirewallRulesByNodeAndVmidAndPos' {
        It 'Test Set-PVENodesQemuFirewallRulesByNodeAndVmidAndPos' {
            #$TestResult = Set-PVENodesQemuFirewallRulesByNodeAndVmidAndPos -PUTNodesQemuFirewallRulesRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuResizeByNodeAndVmid' {
        It 'Test Set-PVENodesQemuResizeByNodeAndVmid' {
            #$TestResult = Set-PVENodesQemuResizeByNodeAndVmid -PUTNodesQemuResizeRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuSendkeyByNodeAndVmid' {
        It 'Test Set-PVENodesQemuSendkeyByNodeAndVmid' {
            #$TestResult = Set-PVENodesQemuSendkeyByNodeAndVmid -PUTNodesQemuSendkeyRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuSnapshotConfigByNodeAndVmidAndSnapname' {
        It 'Test Set-PVENodesQemuSnapshotConfigByNodeAndVmidAndSnapname' {
            #$TestResult = Set-PVENodesQemuSnapshotConfigByNodeAndVmidAndSnapname -PUTNodesQemuSnapshotConfigRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesQemuUnlinkByNodeAndVmid' {
        It 'Test Set-PVENodesQemuUnlinkByNodeAndVmid' {
            #$TestResult = Set-PVENodesQemuUnlinkByNodeAndVmid -PUTNodesQemuUnlinkRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesStorageContentByNodeAndStorageAndVolume' {
        It 'Test Set-PVENodesStorageContentByNodeAndStorageAndVolume' {
            #$TestResult = Set-PVENodesStorageContentByNodeAndStorageAndVolume -PUTNodesStorageContentRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesSubscriptionByNode' {
        It 'Test Set-PVENodesSubscriptionByNode' {
            #$TestResult = Set-PVENodesSubscriptionByNode -PUTNodesSubscriptionRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-PVENodesTimeByNode' {
        It 'Test Set-PVENodesTimeByNode' {
            #$TestResult = Set-PVENodesTimeByNode -PUTNodesTimeRB "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
